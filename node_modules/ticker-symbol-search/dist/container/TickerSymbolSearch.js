import React from "react";
import { useState } from "react";
import styled from "styled-components";
import DraggableWrapper from "./DraggableWrapper";
import Search from "../components/Search";
import Markets from "../components/Markets";
import { MarketTypes } from "../types/markets";
import { useSearchSymbols } from "../hooks/useSearchSymbols";
import Selector from "../components/Selector";
import SkeletonLoading from "../components/Loading/SkeletonLoading";
export const TickerSymbolSearch = (props) => {
    const [query, setQuery] = useState({
        search: "",
        market: MarketTypes.ALL,
    });
    const { symbols, isSuccess, isLoading, isError } = useSearchSymbols(query.search, query.market);
    const updateSearchInput = (newSearch) => {
        setQuery((prevQuery) => (Object.assign(Object.assign({}, prevQuery), { search: newSearch })));
    };
    const updateMarket = (newMarket) => {
        setQuery((prevQuery) => (Object.assign(Object.assign({}, prevQuery), { market: newMarket })));
    };
    return (React.createElement(DraggableWrapper, { theme: props.theme },
        React.createElement(Wrapper, null,
            React.createElement(Search, { search: query.search, setSearch: updateSearchInput }),
            query.search.length !== 0 && (React.createElement("div", null,
                React.createElement(Markets, { markets: Object.values(MarketTypes), selectedMarket: query.market, updateMarket: updateMarket }),
                React.createElement(Body, null,
                    isLoading && React.createElement(SkeletonLoading, null),
                    isSuccess && (React.createElement(Selector, { symbols: symbols, callback: props.callback })),
                    isSuccess && symbols.length === 0 && (React.createElement(Text, null, "No symbols found...")),
                    isError && React.createElement(Text, null, "There was an error fetching symbols...")))))));
};
const Wrapper = styled.div `
  display: flex;
  flex-direction: column;
  background: ${({ theme }) => theme.paper.background};
  backdrop-filter: blur(20px);
  border-radius: 10px;
  width: 100%;
`;
const Body = styled.div `
  margin: 0px 20px 0px 20px;
  padding-bottom: 20px;
`;
const Text = styled.p `
  color: ${({ theme }) => theme.paper.color};
`;
//# sourceMappingURL=TickerSymbolSearch.js.map