{"ast":null,"code":"import _slicedToArray from\"/Users/seanang/invesfe-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import ViewBudget from'./ViewBudget';import EditBudget from'./EditBudget';import{AppContext}from'./AppContext';import{jsx as _jsx}from\"react/jsx-runtime\";var Budgett=function Budgett(props){var _useContext=useContext(AppContext),dispatch=_useContext.dispatch;var budget=props.budget;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEditing=_useState2[0],setIsEditing=_useState2[1];var handleEditClick=function handleEditClick(){setIsEditing(true);};var handleSaveClick=function handleSaveClick(value){dispatch({type:'SET_BUDGET',payload:value});setIsEditing(false);};return/*#__PURE__*/_jsx(\"div\",{class:\"alert alert-secondary p-3 d-flex align-items-center justify-content-between\",children:isEditing?/*#__PURE__*/_jsx(EditBudget,{handleSaveClick:handleSaveClick,budget:budget}):/*#__PURE__*/ // For part 1 render component inline rather than create a seperate one\n_jsx(ViewBudget,{handleEditClick:handleEditClick,budget:budget})});};export default Budgett;","map":{"version":3,"sources":["/Users/seanang/invesfe-app/src/budgetTracker/Budgett.js"],"names":["React","useState","useContext","ViewBudget","EditBudget","AppContext","Budgett","props","dispatch","budget","isEditing","setIsEditing","handleEditClick","handleSaveClick","value","type","payload"],"mappings":"iJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAASC,UAAT,KAA2B,cAA3B,C,2CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CAC1B,gBAAqBL,UAAU,CAACG,UAAD,CAA/B,CAAQG,QAAR,aAAQA,QAAR,CACA,GAAOC,CAAAA,MAAP,CAAiBF,KAAjB,CAAOE,MAAP,CACA,cAAkCR,QAAQ,CAAC,KAAD,CAA1C,wCAAOS,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC7BD,YAAY,CAAC,IAAD,CAAZ,CACA,CAFD,CAIA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAClCN,QAAQ,CAAC,CACRO,IAAI,CAAE,YADE,CAERC,OAAO,CAAEF,KAFD,CAAD,CAAR,CAIAH,YAAY,CAAC,KAAD,CAAZ,CACA,CAND,CAQA,mBACC,YAAK,KAAK,CAAC,6EAAX,UACED,SAAS,cACT,KAAC,UAAD,EAAY,eAAe,CAAEG,eAA7B,CAA8C,MAAM,CAAEJ,MAAtD,EADS,eAGT;AACA,KAAC,UAAD,EAAY,eAAe,CAAEG,eAA7B,CAA8C,MAAM,CAAEH,MAAtD,EALF,EADD,CAUA,CA3BD,CA6BA,cAAeH,CAAAA,OAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport ViewBudget from './ViewBudget';\nimport EditBudget from './EditBudget';\nimport { AppContext } from './AppContext';\n\nconst Budgett = (props) => {\n\tconst { dispatch } = useContext(AppContext);\n\tconst {budget} = props;\n\tconst [isEditing, setIsEditing] = useState(false);\n\n\tconst handleEditClick = () => {\n\t\tsetIsEditing(true);\n\t};\n\n\tconst handleSaveClick = (value) => {\n\t\tdispatch({\n\t\t\ttype: 'SET_BUDGET',\n\t\t\tpayload: value,\n\t\t});\n\t\tsetIsEditing(false);\n\t};\n\n\treturn (\n\t\t<div class='alert alert-secondary p-3 d-flex align-items-center justify-content-between'>\n\t\t\t{isEditing ? (\n\t\t\t\t<EditBudget handleSaveClick={handleSaveClick} budget={budget} />\n\t\t\t) : (\n\t\t\t\t// For part 1 render component inline rather than create a seperate one\n\t\t\t\t<ViewBudget handleEditClick={handleEditClick} budget={budget} />\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Budgett;"]},"metadata":{},"sourceType":"module"}