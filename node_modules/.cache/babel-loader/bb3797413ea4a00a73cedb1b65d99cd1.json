{"ast":null,"code":"var _jsxFileName = \"/Users/seanang/Orbital2021-Team-Invesfe/src/components/VariablesForm.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useEffect, useContext, useState } from \"react\";\nimport { db, fire } from \"../config/Firebase.js\";\nimport { UserContext } from \"./UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VariablesForm(props) {\n  _s();\n\n  // const variableArray = props.state;\n  const [state, setState] = useState(props.state);\n  const currentUser = useContext(UserContext);\n  useEffect(() => {\n    if (currentUser != null) {\n      db.child(\"users\").child(currentUser.uid).child(\"compound\").on(\"value\", snapshot => {\n        const array = snapshot.val();\n        setState(array);\n      });\n    }\n  }, []);\n\n  const loadFinancialGoals = () => {\n    if (currentUser != null) {}\n  }; // const { initialAmount, period, growthRate, yearlyContribution } = state;\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"initialAmount\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"text\",\n          children: \"Initial Amount ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"variables\",\n          type: \"number\",\n          id: \"initialAmount\",\n          step: \"0.01\",\n          min: \"0\",\n          name: \"initialAmount\",\n          value: state.initialAmount,\n          onChange: ({\n            target\n          }) => setState({ ...state,\n            initialAmount: Number(target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"validity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"period\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"text\",\n          children: \"Investment Period (Years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"variables\",\n          type: \"number\",\n          id: \"period\",\n          min: \"0\",\n          name: \"period\",\n          value: state.period,\n          onChange: ({\n            target\n          }) => setState({ ...state,\n            period: Number(target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"validity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"growthRate\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"text\",\n          children: \"Annual Growth Rate (%)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"variables\",\n          type: \"number\",\n          id: \"growthRate\",\n          step: \"0.01\",\n          name: \"growthRate\",\n          value: state.growthRate,\n          onChange: ({\n            target\n          }) => setState({ ...state,\n            growthRate: Number(target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"validity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"yearlyContribution\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"text\",\n          children: \"Yearly Contribution ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"variables\",\n          type: \"number\",\n          id: \"yearlyContribution\",\n          step: \"0.01\",\n          min: \"0\",\n          name: \"yearlyContribution\",\n          value: state.yearlyContribution,\n          onChange: ({\n            target\n          }) => setState({ ...state,\n            yearlyContribution: Number(target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"validity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => loadFinancialGoals(),\n        children: \"Load Financial Goals from Budget Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), state.initialAmount > 0 && state.period > 0 && state.yearlyContribution >= 0 && state.growthRate >= -100 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => props.updateVariables(state),\n      children: \"Update Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"text\",\n      children: \"Invalid Values Inputted\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VariablesForm, \"b2n7zHniZ76m1qByEavyXvlDULo=\");\n\n_c = VariablesForm;\nexport default VariablesForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"VariablesForm\");","map":{"version":3,"sources":["/Users/seanang/Orbital2021-Team-Invesfe/src/components/VariablesForm.js"],"names":["React","useEffect","useContext","useState","db","fire","UserContext","VariablesForm","props","state","setState","currentUser","child","uid","on","snapshot","array","val","loadFinancialGoals","initialAmount","target","Number","value","period","growthRate","yearlyContribution","updateVariables"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useEffect, useContext, useState } from \"react\";\nimport { db, fire } from \"../config/Firebase.js\";\nimport { UserContext } from \"./UserContext\";\n\nfunction VariablesForm(props) {\n  // const variableArray = props.state;\n  const [state, setState] = useState(props.state);\n  const currentUser = useContext(UserContext);\n\n  useEffect(() => {\n    if (currentUser != null) {\n      db.child(\"users\")\n        .child(currentUser.uid)\n        .child(\"compound\")\n        .on(\"value\", (snapshot) => {\n          const array = snapshot.val();\n          setState(array);\n        });\n    }\n  }, []);\n\n  const loadFinancialGoals = () => {\n    if(currentUser != null) {\n      \n    }\n  }\n\n  // const { initialAmount, period, growthRate, yearlyContribution } = state;\n\n  return (\n    <section>\n      <div className=\"flex\">\n        <label htmlFor=\"initialAmount\">\n          <div id=\"text\">Initial Amount ($)</div>\n          <input\n            className=\"variables\"\n            type=\"number\"\n            id=\"initialAmount\"\n            step=\"0.01\"\n            min=\"0\"\n            name=\"initialAmount\"\n            value={state.initialAmount}\n            onChange={({ target }) =>\n              setState({ ...state, initialAmount: Number(target.value) })\n            }\n          />\n          <span class=\"validity\"></span>\n        </label>\n        <label htmlFor=\"period\">\n          <div id=\"text\">Investment Period (Years)</div>\n          <input\n            className=\"variables\"\n            type=\"number\"\n            id=\"period\"\n            min=\"0\"\n            name=\"period\"\n            value={state.period}\n            onChange={({ target }) =>\n              setState({ ...state, period: Number(target.value) })\n            }\n          />\n          <span class=\"validity\"></span>\n        </label>\n        <label htmlFor=\"growthRate\">\n          <div id=\"text\">Annual Growth Rate (%)</div>\n          <input\n            className=\"variables\"\n            type=\"number\"\n            id=\"growthRate\"\n            step=\"0.01\"\n            name=\"growthRate\"\n            value={state.growthRate}\n            onChange={({ target }) =>\n              setState({ ...state, growthRate: Number(target.value) })\n            }\n          />\n          <span class=\"validity\"></span>\n        </label>\n        <label htmlFor=\"yearlyContribution\">\n          <div id=\"text\">Yearly Contribution ($)</div>\n          <input\n            className=\"variables\"\n            type=\"number\"\n            id=\"yearlyContribution\"\n            step=\"0.01\"\n            min=\"0\"\n            name=\"yearlyContribution\"\n            value={state.yearlyContribution}\n            onChange={({ target }) =>\n              setState({ ...state, yearlyContribution: Number(target.value) })\n            }\n          />\n          <span class=\"validity\"></span>\n        </label>\n        <button onClick={() => loadFinancialGoals()}>\n          Load Financial Goals from Budget Planner\n        </button>\n      </div>\n      {state.initialAmount > 0 && state.period > 0 && state.yearlyContribution >= 0  && state.growthRate >= -100 ? (\n        <button type=\"button\" onClick={() => props.updateVariables(state)}>\n          Update Chart\n        </button>\n      ) : (\n        <div id=\"text\">Invalid Values Inputted</div>\n      )}\n    </section>\n  );\n}\n\nexport default VariablesForm;\n"]},"metadata":{},"sourceType":"module"}