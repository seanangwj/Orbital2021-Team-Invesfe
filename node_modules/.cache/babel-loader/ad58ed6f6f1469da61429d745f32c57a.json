{"ast":null,"code":"var _jsxFileName = \"/Users/seanang/invesfe-app/src/components/CompoundGrowthCalculator.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport compoundLineGraph from \"./compoundLineGraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CompoundGrowthCalculator() {\n  _s();\n\n  const [initialAmt, setNewInitialAmt] = useState(\"0\");\n  const [yearlyContribution, setNewYearlyContribution] = useState(\"0\");\n  const [interestRate, setNewInterestRate] = useState(\"0\");\n  const [numOfYears, setNewNumOfYears] = useState(\"0\");\n  const [totalValue, setNewTotalValue] = useState(\"0\");\n  const array = [];\n  array.push(0, initialAmt);\n\n  calculate = () => {\n    var total = initialAmt;\n\n    for (let index = 1; index <= numOfYears; index++) {\n      total *= 1 + interestRate / 100;\n      array.push(index, total);\n      total += yearlyContribution;\n    }\n\n    setNewTotalValue(total);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Input your Initial Amount:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: initialAmt,\n      onChange: event => setNewInitialAmt(event.target.value),\n      readonly: true,\n      class: \"total-input form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Input your Yearly Contribution:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: yearlyContribution,\n      onChange: event => setNewYearlyContribution(event.target.value),\n      readonly: true,\n      class: \"total-input form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Input your Interest Rate:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: interestRate,\n      onChange: event => setNewInterestRate(event.target.value),\n      readonly: true,\n      class: \"total-input form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Input your Number of Years:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: numOfYears,\n      onChange: event => setNewNumOfYears(event.target.value),\n      readonly: true,\n      class: \"total-input form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calculate,\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\" Total Investment Value: \", totalValue, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"compoundLineGraph\", {\n      array: array\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CompoundGrowthCalculator, \"fF2spFW7gVQLrAioceAcGapKCKs=\");\n\n_c = CompoundGrowthCalculator;\nexport default CompoundGrowthCalculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompoundGrowthCalculator\");","map":{"version":3,"sources":["/Users/seanang/invesfe-app/src/components/CompoundGrowthCalculator.js"],"names":["React","useState","compoundLineGraph","CompoundGrowthCalculator","initialAmt","setNewInitialAmt","yearlyContribution","setNewYearlyContribution","interestRate","setNewInterestRate","numOfYears","setNewNumOfYears","totalValue","setNewTotalValue","array","push","calculate","total","index","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;;AAEA,SAASC,wBAAT,GAAoC;AAAA;;AAClC,QAAM,CAACC,UAAD,EAAaC,gBAAb,IAAiCJ,QAAQ,CAAC,GAAD,CAA/C;AACA,QAAM,CAACK,kBAAD,EAAqBC,wBAArB,IAAiDN,QAAQ,CAAC,GAAD,CAA/D;AACA,QAAM,CAACO,YAAD,EAAeC,kBAAf,IAAqCR,QAAQ,CAAC,GAAD,CAAnD;AACA,QAAM,CAACS,UAAD,EAAaC,gBAAb,IAAiCV,QAAQ,CAAC,GAAD,CAA/C;AACA,QAAK,CAACW,UAAD,EAAaC,gBAAb,IAAiCZ,QAAQ,CAAC,GAAD,CAA9C;AACA,QAAMa,KAAK,GAAG,EAAd;AACAA,EAAAA,KAAK,CAACC,IAAN,CAAW,CAAX,EAAcX,UAAd;;AAEAY,EAAAA,SAAS,GAAG,MAAM;AAChB,QAAIC,KAAK,GAAGb,UAAZ;;AACA,SAAK,IAAIc,KAAK,GAAG,CAAjB,EAAoBA,KAAK,IAAIR,UAA7B,EAAyCQ,KAAK,EAA9C,EAAkD;AAC9CD,MAAAA,KAAK,IAAK,IAAIT,YAAY,GAAC,GAA3B;AACAM,MAAAA,KAAK,CAACC,IAAN,CAAWG,KAAX,EAAkBD,KAAlB;AACAA,MAAAA,KAAK,IAAIX,kBAAT;AACH;;AACDO,IAAAA,gBAAgB,CAACI,KAAD,CAAhB;AACD,GARD;;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEb,UAFT;AAGE,MAAA,QAAQ,EAAGe,KAAD,IAAWd,gBAAgB,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAHvC;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA,YAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEf,kBAFT;AAGE,MAAA,QAAQ,EAAGa,KAAD,IAAWZ,wBAAwB,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAH/C;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA,YAVF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF,eAkBE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEb,YAFT;AAGE,MAAA,QAAQ,EAAGW,KAAD,IAAWV,kBAAkB,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAHzC;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA,YAlBF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF,eA0BE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEX,UAFT;AAGE,MAAA,QAAQ,EAAGS,KAAD,IAAWR,gBAAgB,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAHvC;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA,YA1BF,eAkCA;AAAQ,MAAA,OAAO,EAAEL,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlCA,eAsCA;AAAA,8CAAiCJ,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,YAtCA,eAwCA;AAAmB,MAAA,KAAK,EAAEE;AAA1B;AAAA;AAAA;AAAA;AAAA,YAxCA;AAAA,kBADF;AA8CD;;GAjEQX,wB;;KAAAA,wB;AAmET,eAAeA,wBAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport compoundLineGraph from \"./compoundLineGraph\";\n\nfunction CompoundGrowthCalculator() {\n  const [initialAmt, setNewInitialAmt] = useState(\"0\");\n  const [yearlyContribution, setNewYearlyContribution] = useState(\"0\");\n  const [interestRate, setNewInterestRate] = useState(\"0\");\n  const [numOfYears, setNewNumOfYears] = useState(\"0\");\n  const[totalValue, setNewTotalValue] = useState(\"0\");\n  const array = [];\n  array.push(0, initialAmt);\n\n  calculate = () => {\n    var total = initialAmt;\n    for (let index = 1; index <= numOfYears; index++) {\n        total *= (1 + interestRate/100);\n        array.push(index, total);\n        total += yearlyContribution;\n    }\n    setNewTotalValue(total);\n  }\n\n  return (\n    <>\n      <label>Input your Initial Amount:</label>\n      <input\n        type=\"text\"\n        value={initialAmt}\n        onChange={(event) => setNewInitialAmt(event.target.value)}\n        readonly\n        class=\"total-input form-control\"\n      />\n      <label>Input your Yearly Contribution:</label>\n      <input\n        type=\"text\"\n        value={yearlyContribution}\n        onChange={(event) => setNewYearlyContribution(event.target.value)}\n        readonly\n        class=\"total-input form-control\"\n      />\n      <label>Input your Interest Rate:</label>\n      <input\n        type=\"text\"\n        value={interestRate}\n        onChange={(event) => setNewInterestRate(event.target.value)}\n        readonly\n        class=\"total-input form-control\"\n      />\n      <label>Input your Number of Years:</label>\n      <input\n        type=\"text\"\n        value={numOfYears}\n        onChange={(event) => setNewNumOfYears(event.target.value)}\n        readonly\n        class=\"total-input form-control\"\n      />\n\n    <button onClick={calculate}>\n        Calculate\n    </button>\n\n    <label> Total Investment Value: {totalValue} </label>\n\n    <compoundLineGraph array={array}/>\n\n\n    </>\n  );\n}\n\nexport default CompoundGrowthCalculator;"]},"metadata":{},"sourceType":"module"}