{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { config } from \"../config\";\nimport { Routes } from \"../types/config\";\nimport axios from \"axios\";\nimport { MarketTypes } from \"../types/markets\";\nexport const getSymbols = queryParams => __awaiter(void 0, void 0, void 0, function* () {\n  const targetParams = `?type=${queryParams.type === MarketTypes.ALL ? \"\" : queryParams.type.toLowerCase()}&text=${queryParams.text}&hl=${queryParams.hl}&exchange=&lang=en&domain=production`;\n  const symbolsEndpoint = `${config.endpoint}/${Routes.SYMBOL_SEARCH}`;\n  const response = yield axios.get(config.proxyEndpoint, {\n    params: {\n      url: symbolsEndpoint + targetParams\n    }\n  });\n\n  if (response.status !== 200) {\n    throw \"getSymbols failed \" + response.status;\n  }\n\n  return response.data;\n});","map":{"version":3,"sources":["../../src/actions/symbols.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAS,MAAT,QAAuB,WAAvB;AACA,SAAS,MAAT,QAAuB,iBAAvB;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAM,UAAU,GAAU,WAAP,IAAyC,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACjE,QAAM,YAAY,GAAW,SAC3B,WAAW,CAAC,IAAZ,KAAqB,WAAW,CAAC,GAAjC,GAAuC,EAAvC,GAA4C,WAAW,CAAC,IAAZ,CAAiB,WAAjB,EAC9C,SAAS,WAAW,CAAC,IAAI,OACvB,WAAW,CAAC,EACd,sCAJA;AAMA,QAAM,eAAe,GAAW,GAAG,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,aAAa,EAA1E;AAEA,QAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAN,CAAU,MAAM,CAAC,aAAjB,EAAgC;AACrD,IAAA,MAAM,EAAE;AAAE,MAAA,GAAG,EAAE,eAAe,GAAG;AAAzB;AAD6C,GAAhC,CAAvB;;AAIA,MAAI,QAAQ,CAAC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,UAAM,uBAAuB,QAAQ,CAAC,MAAtC;AACD;;AAED,SAAO,QAAQ,CAAC,IAAhB;AACD,CAlBkE,CAA5D","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { config } from \"../config\";\nimport { Routes } from \"../types/config\";\nimport axios from \"axios\";\nimport { MarketTypes } from \"../types/markets\";\nexport const getSymbols = (queryParams) => __awaiter(void 0, void 0, void 0, function* () {\n    const targetParams = `?type=${queryParams.type === MarketTypes.ALL ? \"\" : queryParams.type.toLowerCase()}&text=${queryParams.text}&hl=${queryParams.hl}&exchange=&lang=en&domain=production`;\n    const symbolsEndpoint = `${config.endpoint}/${Routes.SYMBOL_SEARCH}`;\n    const response = yield axios.get(config.proxyEndpoint, {\n        params: { url: symbolsEndpoint + targetParams },\n    });\n    if (response.status !== 200) {\n        throw \"getSymbols failed \" + response.status;\n    }\n    return response.data;\n});\n//# sourceMappingURL=symbols.js.map"]},"metadata":{},"sourceType":"module"}