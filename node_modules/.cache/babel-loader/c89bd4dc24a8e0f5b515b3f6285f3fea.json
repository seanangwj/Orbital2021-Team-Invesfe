{"ast":null,"code":"var _jsxFileName = \"/Users/seanang/Orbital2021-Team-Invesfe/src/components/BudgetForm.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport \"../styles/Budget.css\";\nimport { useEffect, use } from \"react\";\nimport { db, fire } from \"../config/Firebase.js\";\nimport { UserContext } from \"./UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BudgetForm(props) {\n  _s();\n\n  const [state, setState] = React.useState(props.state);\n  const cureentUser = // const { newIncome, newNeeds, newWants, newFinancialGoals } = state;\n  useEffect(() => {\n    if (currentUser != null) {\n      db.child(\"users\").child(currentUser.uid).child(\"compound\").on(\"value\", snapshot => {\n        const array = snapshot.val();\n        setState(array);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"incomeBox\",\n        children: [\"Input your Income:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"income\",\n          type: \"number\",\n          value: state.newIncome,\n          min: \"0\",\n          step: \"0.01\",\n          onChange: ({\n            target\n          }) => setState({ ...state,\n            newIncome: Number(target.value)\n          }),\n          readonly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"validity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"text\",\n      children: \"Percentage of allocations in your Budget\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"budgetBox\",\n        children: [\"Input your % of Needs:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"budget\",\n          type: \"number\",\n          value: state.newNeeds,\n          step: \"0.01\",\n          min: \"0\",\n          max: \"100\",\n          onChange: ({\n            target\n          }) => setState({ ...state,\n            newNeeds: Number(target.value)\n          }),\n          readonly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"validity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"budgetBox\",\n        children: [\"Input your % of Wants:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"budget\",\n          type: \"number\",\n          value: state.newWants,\n          step: \"0.01\",\n          min: \"0\",\n          max: \"100\",\n          onChange: ({\n            target\n          }) => setState({ ...state,\n            newWants: Number(target.value)\n          }),\n          readonly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"validity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"budgetBox\",\n        children: [\"Input your % of Financial Goals:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"budget\",\n          type: \"number\",\n          value: state.newFinancialGoals,\n          step: \"0.01\",\n          min: \"0\",\n          max: \"100\",\n          onChange: ({\n            target\n          }) => setState({ ...state,\n            newFinancialGoals: Number(target.value)\n          }),\n          readonly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"validity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"budget-btn\",\n            onClick: () => canUpdate(newIncome, newNeeds, newWants, newFinancialGoals) ? props.updateVariables(state) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Invalid Inputs \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this),\n            children: \"Update Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm\",\n          children: canUpdate(newIncome, newNeeds, newWants, newFinancialGoals) ? /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"terms\",\n            children: \"Valid Inputs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"terms\",\n            children: \"Invalid Inputs, please ensure the allocation adds up to 100% \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BudgetForm, \"P/HlxTpikrz/ZHWUzx5WbP/IQCY=\");\n\n_c = BudgetForm;\n\nfunction canUpdate(newIncome, newNeeds, newWants, newFinancialGoals) {\n  return newNeeds >= 0 && newNeeds <= 100 && newWants >= 0 && newWants <= 100 && newFinancialGoals >= 0 && newFinancialGoals <= 100 && newIncome >= 0 && newNeeds + newWants + newFinancialGoals === 100;\n}\n\nexport default BudgetForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BudgetForm\");","map":{"version":3,"sources":["/Users/seanang/Orbital2021-Team-Invesfe/src/components/BudgetForm.js"],"names":["React","useEffect","use","db","fire","UserContext","BudgetForm","props","state","setState","useState","cureentUser","currentUser","child","uid","on","snapshot","array","val","newIncome","target","Number","value","newNeeds","newWants","newFinancialGoals","canUpdate","updateVariables"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,sBAAP;AACA,SAAQC,SAAR,EAAmBC,GAAnB,QAA6B,OAA7B;AACA,SAASC,EAAT,EAAaC,IAAb,QAAyB,uBAAzB;AACA,SAASC,WAAT,QAA2B,eAA3B;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACU,QAAN,CAAeH,KAAK,CAACC,KAArB,CAA1B;AACA,QAAMG,WAAW,GAEjB;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,WAAW,IAAI,IAAnB,EAAyB;AACvBT,MAAAA,EAAE,CAACU,KAAH,CAAS,OAAT,EACGA,KADH,CACSD,WAAW,CAACE,GADrB,EAEGD,KAFH,CAES,UAFT,EAGGE,EAHH,CAGM,OAHN,EAGgBC,QAAD,IAAc;AAC3B,cAAMC,KAAK,GAAGD,QAAQ,CAACE,GAAT,EAAd;AACAT,QAAAA,QAAQ,CAACQ,KAAD,CAAR;AACH,OANC;AAOH;AAAC,GATO,EASL,EATK,CAJT;AAeA,sBACE;AAAA,4BACE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA,6BACE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA,sDAEE;AACE,UAAA,SAAS,EAAC,QADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,EAAET,KAAK,CAACW,SAHf;AAIE,UAAA,GAAG,EAAC,GAJN;AAKE,UAAA,IAAI,EAAC,MALP;AAME,UAAA,QAAQ,EAAE,CAAC;AAAEC,YAAAA;AAAF,WAAD,KACRX,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYW,YAAAA,SAAS,EAAEE,MAAM,CAACD,MAAM,CAACE,KAAR;AAA7B,WAAD,CAPZ;AASE,UAAA,QAAQ;AATV;AAAA;AAAA;AAAA;AAAA,gBAFF,eAaE;AAAM,UAAA,KAAK,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE;AAAA;AAAA;AAAA;AAAA,YAlBF,eAmBE;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,eAoBE;AAAA;AAAA;AAAA;AAAA,YApBF,eAqBE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA,6BACE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA,0DAEE;AACE,UAAA,SAAS,EAAC,QADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,EAAEd,KAAK,CAACe,QAHf;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,GAAG,EAAC,GALN;AAME,UAAA,GAAG,EAAC,KANN;AAOE,UAAA,QAAQ,EAAE,CAAC;AAAEH,YAAAA;AAAF,WAAD,KACRX,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYe,YAAAA,QAAQ,EAAEF,MAAM,CAACD,MAAM,CAACE,KAAR;AAA5B,WAAD,CARZ;AAUE,UAAA,QAAQ;AAVV;AAAA;AAAA;AAAA;AAAA,gBAFF,eAcE;AAAM,UAAA,KAAK,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YArBF,eAuCE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA,6BACE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA,0DAEE;AACE,UAAA,SAAS,EAAC,QADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,EAAEd,KAAK,CAACgB,QAHf;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,GAAG,EAAC,GALN;AAME,UAAA,GAAG,EAAC,KANN;AAOE,UAAA,QAAQ,EAAE,CAAC;AAAEJ,YAAAA;AAAF,WAAD,KACRX,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYgB,YAAAA,QAAQ,EAAEH,MAAM,CAACD,MAAM,CAACE,KAAR;AAA5B,WAAD,CARZ;AAUE,UAAA,QAAQ;AAVV;AAAA;AAAA;AAAA;AAAA,gBAFF,eAcE;AAAM,UAAA,KAAK,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvCF,eAyDE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA,oEAEE;AACE,UAAA,KAAK,EAAC,QADR;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,EAAEd,KAAK,CAACiB,iBAHf;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,GAAG,EAAC,GALN;AAME,UAAA,GAAG,EAAC,KANN;AAOE,UAAA,QAAQ,EAAE,CAAC;AAAEL,YAAAA;AAAF,WAAD,KACRX,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYiB,YAAAA,iBAAiB,EAAEJ,MAAM,CAACD,MAAM,CAACE,KAAR;AAArC,WAAD,CARZ;AAUE,UAAA,QAAQ;AAVV;AAAA;AAAA;AAAA;AAAA,gBAFF,eAcE;AAAM,UAAA,KAAK,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE;AAAA;AAAA;AAAA;AAAA,cAjBF,eAkBE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACA;AACE,YAAA,SAAS,EAAC,YADZ;AAEE,YAAA,OAAO,EAAE,MACPI,SAAS,CAACP,SAAD,EAAYI,QAAZ,EAAsBC,QAAtB,EAAgCC,iBAAhC,CAAT,GACElB,KAAK,CAACoB,eAAN,CAAsBnB,KAAtB,CADF,gBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADA,eAeA;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,oBACCkB,SAAS,CAACP,SAAD,EAAYI,QAAZ,EAAsBC,QAAtB,EAAgCC,iBAAhC,CAAT,gBACC;AAAG,YAAA,EAAE,EAAC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,gBAGC;AAAG,YAAA,EAAE,EAAC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBAfA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAzDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsGD;;GAvHQnB,U;;KAAAA,U;;AAyHT,SAASoB,SAAT,CAAmBP,SAAnB,EAA8BI,QAA9B,EAAwCC,QAAxC,EAAkDC,iBAAlD,EAAqE;AACnE,SACEF,QAAQ,IAAI,CAAZ,IACAA,QAAQ,IAAI,GADZ,IAEAC,QAAQ,IAAI,CAFZ,IAGAA,QAAQ,IAAI,GAHZ,IAIAC,iBAAiB,IAAI,CAJrB,IAKAA,iBAAiB,IAAI,GALrB,IAMAN,SAAS,IAAI,CANb,IAOAI,QAAQ,GAAGC,QAAX,GAAsBC,iBAAtB,KAA4C,GAR9C;AAUD;;AAED,eAAenB,UAAf","sourcesContent":["import * as React from \"react\";\nimport \"../styles/Budget.css\";\nimport {useEffect, use} from \"react\";\nimport { db, fire } from \"../config/Firebase.js\";\nimport { UserContext} from \"./UserContext\";\n\nfunction BudgetForm(props) {\n  const [state, setState] = React.useState(props.state);\n  const cureentUser = \n\n  // const { newIncome, newNeeds, newWants, newFinancialGoals } = state;\n\n  useEffect(() => {\n    if (currentUser != null) {\n      db.child(\"users\")\n        .child(currentUser.uid)\n        .child(\"compound\")\n        .on(\"value\", (snapshot) => {\n        const array = snapshot.val();\n        setState(array);\n    });\n  }}, []);\n\n  return (\n    <body>\n      <div class=\"form-group\">\n        <label className=\"incomeBox\">\n          Input your Income:\n          <input\n            className=\"income\"\n            type=\"number\"\n            value={state.newIncome}\n            min=\"0\"\n            step=\"0.01\"\n            onChange={({ target }) =>\n              setState({ ...state, newIncome: Number(target.value) })\n            }\n            readonly\n          />\n          <span class=\"validity\"></span>\n        </label>\n      </div>\n      <br></br>\n      <div class=\"text\">Percentage of allocations in your Budget</div>\n      <br></br>\n      <div class=\"form-group\">\n        <label className=\"budgetBox\">\n          Input your % of Needs:\n          <input\n            className=\"budget\"\n            type=\"number\"\n            value={state.newNeeds}\n            step=\"0.01\"\n            min=\"0\"\n            max=\"100\"\n            onChange={({ target }) =>\n              setState({ ...state, newNeeds: Number(target.value) })\n            }\n            readonly\n          />\n          <span class=\"validity\"></span>\n        </label>\n      </div>\n      <div class=\"form-group\">\n        <label className=\"budgetBox\">\n          Input your % of Wants:\n          <input\n            className=\"budget\"\n            type=\"number\"\n            value={state.newWants}\n            step=\"0.01\"\n            min=\"0\"\n            max=\"100\"\n            onChange={({ target }) =>\n              setState({ ...state, newWants: Number(target.value) })\n            }\n            readonly\n          />\n          <span class=\"validity\"></span>\n        </label>\n      </div>\n      <div class=\"form-group\">\n        <label className=\"budgetBox\">\n          Input your % of Financial Goals:\n          <input\n            class=\"budget\"\n            type=\"number\"\n            value={state.newFinancialGoals}\n            step=\"0.01\"\n            min=\"0\"\n            max=\"100\"\n            onChange={({ target }) =>\n              setState({ ...state, newFinancialGoals: Number(target.value) })\n            }\n            readonly\n          />\n          <span class=\"validity\"></span>\n        </label>\n        <br></br>\n        <div className='row mt-3'>\n        <div className='col-sm'>\n        <button\n          className=\"budget-btn\"\n          onClick={() =>\n            canUpdate(newIncome, newNeeds, newWants, newFinancialGoals) ? (\n              props.updateVariables(state)\n            ) : (\n              <p>Invalid Inputs </p>\n            )\n          }\n        >\n          Update Chart\n        </button>\n        </div>\n        <div className='col-sm'>\n        {canUpdate(newIncome, newNeeds, newWants, newFinancialGoals) ? (\n          <p id=\"terms\">Valid Inputs</p>\n        ) : (\n          <p id=\"terms\">Invalid Inputs, please ensure the allocation adds up to 100% </p>\n        )}\n          </div>\n          </div>\n      </div>\n    </body>\n  );\n}\n\nfunction canUpdate(newIncome, newNeeds, newWants, newFinancialGoals) {\n  return (\n    newNeeds >= 0 &&\n    newNeeds <= 100 &&\n    newWants >= 0 &&\n    newWants <= 100 &&\n    newFinancialGoals >= 0 &&\n    newFinancialGoals <= 100 &&\n    newIncome >= 0 &&\n    newNeeds + newWants + newFinancialGoals === 100\n  );\n}\n\nexport default BudgetForm;\n"]},"metadata":{},"sourceType":"module"}