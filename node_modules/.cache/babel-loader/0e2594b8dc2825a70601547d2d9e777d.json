{"ast":null,"code":"var _jsxFileName = \"/Users/seanang/invesfe-app/src/components/CompoundGrowthCalculator.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CompoundGrowthCalculator() {\n  _s();\n\n  const [initialAmt, setNewInitialAmt] = useState(\"0\");\n  const [yearlyContribution, setNewYearlyContribution] = useState(\"0\");\n  const [interestRate, setNewInterestRate] = useState(\"0\");\n  const [numOfYears, setNewNumOfYears] = useState(\"0\");\n  const [totalValue, setNewTotalValue] = useState(\"0\");\n  const array = [];\n  array.push(0, initialAmt);\n\n  const calculate = () => {\n    var total = initialAmt;\n\n    for (let index = 1; index <= numOfYears; index++) {\n      total *= 1 + interestRate / 100;\n      total += yearlyContribution;\n      array.push(index, total);\n    }\n\n    setNewTotalValue(total);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"40vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Initial Amount?\",\n          variant: \"outlined\",\n          type: \"number\",\n          onChange: e => setNewInitialAmt(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Number of Years?\",\n          variant: \"outlined\",\n          type: \"number\",\n          onChange: e => setNewNumOfYears(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Annual Interest rate?\",\n          variant: \"outlined\",\n          type: \"number\",\n          onChange: e => setNewInterestRate(e.target.value / 100)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Yearly Contribution?\",\n          variant: \"outlined\",\n          type: \"number\",\n          onChange: e => setNewYearlyContribution(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            calculate();\n          },\n          children: \"Calculate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Total Investment Value: \", totalValue, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CompoundGrowthCalculator, \"fF2spFW7gVQLrAioceAcGapKCKs=\");\n\n_c = CompoundGrowthCalculator;\nexport default CompoundGrowthCalculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompoundGrowthCalculator\");","map":{"version":3,"sources":["/Users/seanang/invesfe-app/src/components/CompoundGrowthCalculator.js"],"names":["React","useState","TextField","Button","CompoundGrowthCalculator","initialAmt","setNewInitialAmt","yearlyContribution","setNewYearlyContribution","interestRate","setNewInterestRate","numOfYears","setNewNumOfYears","totalValue","setNewTotalValue","array","push","calculate","total","index","display","alignItems","justifyContent","height","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction CompoundGrowthCalculator() {\n  const [initialAmt, setNewInitialAmt] = useState(\"0\");\n  const [yearlyContribution, setNewYearlyContribution] = useState(\"0\");\n  const [interestRate, setNewInterestRate] = useState(\"0\");\n  const [numOfYears, setNewNumOfYears] = useState(\"0\");\n  const [totalValue, setNewTotalValue] = useState(\"0\");\n  const array = [];\n  array.push(0, initialAmt);\n\n  const calculate = () => {\n    var total = initialAmt;\n    for (let index = 1; index <= numOfYears; index++) {\n      total *= 1 + interestRate / 100;\n      total += yearlyContribution;\n      array.push(index, total);\n    }\n    setNewTotalValue(total);\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: \"40vh\",\n        }}\n      >\n        <form>\n          <TextField\n            label=\"Initial Amount?\"\n            variant=\"outlined\"\n            type=\"number\"\n            onChange={(e) => setNewInitialAmt(e.target.value)}\n          />\n          <TextField\n            label=\"Number of Years?\"\n            variant=\"outlined\"\n            type=\"number\"\n            onChange={(e) => setNewNumOfYears(e.target.value)}\n          />\n          <TextField\n            label=\"Annual Interest rate?\"\n            variant=\"outlined\"\n            type=\"number\"\n            onChange={(e) => setNewInterestRate(e.target.value / 100)}\n          />\n           <TextField\n            label=\"Yearly Contribution?\"\n            variant=\"outlined\"\n            type=\"number\"\n            onChange={(e) => setNewYearlyContribution(e.target.value)}\n          />\n          <br />\n          <br />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              calculate();\n            }}>\n            Calculate\n          </Button>\n\n          <label> Total Investment Value: {totalValue} </label>\n\n          <br />\n          <br />\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default CompoundGrowthCalculator;\n"]},"metadata":{},"sourceType":"module"}