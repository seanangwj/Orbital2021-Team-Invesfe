{"ast":null,"code":"var _jsxFileName = \"/Users/seanang/invesfe-app/src/components/IntrinsicValue.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport '../styles/Intrinsic.css';\nimport NavBar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction IntrinsicValue() {\n  _s();\n\n  const [netProfit, newNetProfit] = useState(\"33000\");\n  const [depAndAmort, newDepAndAmort] = useState(\"6000\");\n  const [increaseInWC, newIncreaseINWC] = useState(\"6000\");\n  const [capitalExpenditure, newCapitalExpenditure] = useState(\"15000\");\n  const [debtRepayment, newDebtRepayment] = useState(\"600\");\n  const [debtRaised, newDebtRaised] = useState(\"200\");\n  const [numOfShares, newNumOfShares] = useState(\"2000\");\n  const [rateOfReturn, newRateOfReturn] = useState(\"5\");\n  const [fcfeGrowth, newFcfeGrowth] = useState(\"15\");\n  const [intrinsicValue, newIntrinsicValue] = useState(\"0\");\n  var fcfeY1 = parseFloat(netProfit) + parseFloat(depAndAmort) - parseFloat(increaseInWC) - parseFloat(capitalExpenditure) - parseFloat(debtRepayment) + parseFloat(debtRaised);\n  const projectedFCFE = [];\n\n  const calculateIntrinsicValue = () => {\n    for (let index = 1; index <= 5; index++) {\n      intrinsicValue += projectedFCFE[index - 1].value / Math.pow(1 + rateOfReturn / 100, index);\n    }\n\n    intrinsicValue += projectedFCFE[4].value.toFixed(2) * (1 / (rateOfReturn / 100)) / Math.pow(1 + rateOfReturn / 100, 5);\n  };\n\n  for (let index = 1; index <= 5; index++) {\n    projectedFCFE.push({\n      label: `${index}`,\n      value: fcfeY1 * Math.pow(1 + fcfeGrowth / 100, index - 1)\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelBox\",\n        children: [\"Net Profit after Tax ($) :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"netProfit\",\n          name: \"netProfit\",\n          value: netProfit,\n          onChange: event => newNetProfit(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"validity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelBox\",\n        children: [\"Depreciation and Amortisation ($) :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"depAndAmort\",\n          name: \"depAndAmort\",\n          value: depAndAmort,\n          onChange: event => newDepAndAmort(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"validity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelBox\",\n        children: [\"Increase in Working Capital ($) :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"increaseInWC\",\n          name: \"increaseInWC\",\n          value: increaseInWC,\n          onChange: event => newIncreaseINWC(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"validity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelBox\",\n        children: [\"Capital Expenditure ($) :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"capitalExpenditure\",\n          name: \"capitalExpenditure\",\n          value: capitalExpenditure,\n          onChange: event => newCapitalExpenditure(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"validity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelBox\",\n        children: [\"Debt Repayment on existing debt ($) :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"debtRepayment\",\n          name: \"debtRepayment\",\n          min: \"0\",\n          value: debtRepayment,\n          onChange: event => newDebtRepayment(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"validity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelBox\",\n        children: [\"Fresh Debt Raised ($) :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"debtRaised\",\n          name: \"debtRaised\",\n          value: debtRaised,\n          onChange: event => newDebtRaised(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"validity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelBox\",\n        children: [\"No. of Outstanding Shares :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"numOfShares\",\n          name: \"numOfShares\",\n          min: \"1\",\n          value: numOfShares,\n          onChange: event => newNumOfShares(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"validity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelBox\",\n        children: [\"Required rate of return (%) :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"rateOfReturn\",\n          name: \"rateOfReturn\",\n          min: \"0\",\n          value: rateOfReturn,\n          onChange: event => newRateOfReturn(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"validity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelBox\",\n        children: [\"FCFE Growth Rate (%) :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"fcfeGrowth\",\n          name: \"fcfeGrowth\",\n          min: \"0\",\n          value: fcfeGrowth,\n          onChange: event => newFcfeGrowth(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"validity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => calculateIntrinsicValue(),\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"value-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Projected FCFE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: projectedFCFE.map(({\n            label,\n            value\n          }) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", value.toFixed(2), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, label, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelBox\",\n        children: [\"Terminal Value =\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: (projectedFCFE[4].value * (1 / (rateOfReturn / 100))).toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelBox\",\n        children: [\"Intrinsic Value For Company =\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: intrinsicValue.toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"final-labelBox\",\n        children: [\"Intrinsic Value per Share =\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: (intrinsicValue / numOfShares).toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(IntrinsicValue, \"V2UnKvIT/TTvvozLVHT53UrnAyQ=\");\n\n_c = IntrinsicValue;\nexport default IntrinsicValue;\n\nvar _c;\n\n$RefreshReg$(_c, \"IntrinsicValue\");","map":{"version":3,"sources":["/Users/seanang/invesfe-app/src/components/IntrinsicValue.js"],"names":["useState","NavBar","IntrinsicValue","netProfit","newNetProfit","depAndAmort","newDepAndAmort","increaseInWC","newIncreaseINWC","capitalExpenditure","newCapitalExpenditure","debtRepayment","newDebtRepayment","debtRaised","newDebtRaised","numOfShares","newNumOfShares","rateOfReturn","newRateOfReturn","fcfeGrowth","newFcfeGrowth","intrinsicValue","newIntrinsicValue","fcfeY1","parseFloat","projectedFCFE","calculateIntrinsicValue","index","value","Math","pow","toFixed","push","label","event","target","map"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport '../styles/Intrinsic.css';\nimport NavBar from './Navbar';\n\nfunction IntrinsicValue() {\n  const [netProfit, newNetProfit] = useState(\"33000\");\n  const [depAndAmort, newDepAndAmort] = useState(\"6000\");\n  const [increaseInWC, newIncreaseINWC] = useState(\"6000\");\n  const [capitalExpenditure, newCapitalExpenditure] = useState(\"15000\");\n  const [debtRepayment, newDebtRepayment] = useState(\"600\");\n  const [debtRaised, newDebtRaised] = useState(\"200\");\n  const [numOfShares, newNumOfShares] = useState(\"2000\");\n  const [rateOfReturn, newRateOfReturn] = useState(\"5\");\n  const [fcfeGrowth, newFcfeGrowth] = useState(\"15\");\n  const[intrinsicValue, newIntrinsicValue] = useState(\"0\")\n  var fcfeY1 =\n    parseFloat(netProfit) +\n    parseFloat(depAndAmort) -\n    parseFloat(increaseInWC) -\n    parseFloat(capitalExpenditure) -\n    parseFloat(debtRepayment) +\n    parseFloat(debtRaised);\n\n  const projectedFCFE = [];\n\n\n  const calculateIntrinsicValue = () => {\n    for (let index = 1; index <= 5; index++) {\n      intrinsicValue +=\n        (projectedFCFE[index - 1].value / Math.pow(1 + rateOfReturn / 100, index));\n    }\n    intrinsicValue += (projectedFCFE[4].value.toFixed(2) * (1 / (rateOfReturn / 100))) / \n    Math.pow(1 + (rateOfReturn / 100),5)\n  };\n\n  for (let index = 1; index <= 5; index++) {\n    projectedFCFE.push({\n      label: `${index}`,\n      value: fcfeY1 * Math.pow(1 + fcfeGrowth / 100, index - 1),\n    });\n  }\n\n  return (\n      <>\n      <section className=\"header\">\n      <NavBar/>\n      </section>\n    <div className =\"label-container\">\n      <label className=\"labelBox\">\n        Net Profit after Tax ($) :  \n        <input\n          type=\"number\"\n          id=\"netProfit\"\n          name=\"netProfit\"\n          value={netProfit}\n          onChange={(event) => newNetProfit(event.target.value)}\n        />\n        <span class=\"validity\"></span>\n      </label>\n      <br></br><label className=\"labelBox\">\n        Depreciation and Amortisation ($) : \n        <input\n          type=\"number\"\n          id=\"depAndAmort\"\n          name=\"depAndAmort\"\n          value={depAndAmort}\n          onChange={(event) => newDepAndAmort(event.target.value)}\n        />\n        <span class=\"validity\"></span>\n      </label>\n      <br></br><label className=\"labelBox\">\n        Increase in Working Capital ($) : \n        <input\n          type=\"number\"\n          id=\"increaseInWC\"\n          name=\"increaseInWC\"\n          value={increaseInWC}\n          onChange={(event) => newIncreaseINWC(event.target.value)}\n        />\n        <span class=\"validity\"></span>\n      </label>\n      <br></br><label className=\"labelBox\">\n        Capital Expenditure ($) :\n        <input\n          type=\"number\"\n          id=\"capitalExpenditure\"\n          name=\"capitalExpenditure\"\n          value={capitalExpenditure}\n          onChange={(event) => newCapitalExpenditure(event.target.value)}\n        />\n        <span class=\"validity\"></span>\n      </label>\n      <br></br><label className=\"labelBox\">\n        Debt Repayment on existing debt ($) :\n        <input\n          type=\"number\"\n          id=\"debtRepayment\"\n          name=\"debtRepayment\"\n          min = \"0\"\n          value={debtRepayment}\n          onChange={(event) => newDebtRepayment(event.target.value)}\n        />\n        <span class=\"validity\"></span>\n      </label>\n      <br></br><label className=\"labelBox\">\n        Fresh Debt Raised ($) :\n        <input\n          type=\"number\"\n          id=\"debtRaised\"\n          name=\"debtRaised\"\n          value={debtRaised}\n          onChange={(event) => newDebtRaised(event.target.value)}\n        />\n        <span class=\"validity\"></span>\n      </label>\n      <br></br><label className=\"labelBox\">\n        No. of Outstanding Shares :\n        <input\n          type=\"number\"\n          id=\"numOfShares\"\n          name=\"numOfShares\"\n          min = \"1\"\n          value={numOfShares}\n          onChange={(event) => newNumOfShares(event.target.value)}\n        />\n        <span class=\"validity\"></span>\n      </label>\n      <br></br><label className=\"labelBox\">\n        Required rate of return (%) :\n        <input\n          type=\"number\"\n          id=\"rateOfReturn\"\n          name=\"rateOfReturn\"\n          min = \"0\"\n          value={rateOfReturn}\n          onChange={(event) => newRateOfReturn(event.target.value)}\n        />\n        <span class=\"validity\"></span>\n      </label>\n      <br></br><label className=\"labelBox\">\n        FCFE Growth Rate (%) :\n        <input\n          type=\"number\"\n          id=\"fcfeGrowth\"\n          name=\"fcfeGrowth\" \n          min = \"0\"\n          value={fcfeGrowth}\n          onChange={(event) => newFcfeGrowth(event.target.value)}\n        />\n        <span class=\"validity\"></span>\n      </label>\n      <button onClick={() => calculateIntrinsicValue()}>\n          Calculate\n      </button>\n\n      </div>\n\n      <div>\n      <table className = \"value-table\">\n        <thead>\n          <tr>\n            <th>Year</th>\n            <th>Projected FCFE</th>\n          </tr>\n        </thead>\n        <tbody>\n          {projectedFCFE.map(({ label, value }) => (\n            <tr key={label}>\n              <td>{label}</td>\n              <td>${value.toFixed(2)} </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <br></br><label className=\"labelBox\">\n        Terminal Value =\n        <input\n          type=\"number\"\n          value= {(projectedFCFE[4].value * (1 / (rateOfReturn / 100))).toFixed(2)}\n        />\n      </label>\n      <br></br><label className=\"labelBox\">\n        Intrinsic Value For Company =\n        <input type=\"number\" value={intrinsicValue.toFixed(2)} />\n      </label>\n      <br></br><label className=\"final-labelBox\">\n        Intrinsic Value per Share =\n        <input type=\"number\" value={(intrinsicValue / numOfShares).toFixed(2)} />\n      </label>\n    </div>\n    </>\n  );\n}\n\nexport default IntrinsicValue;\n"]},"metadata":{},"sourceType":"module"}