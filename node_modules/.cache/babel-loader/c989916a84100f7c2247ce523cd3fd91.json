{"ast":null,"code":"import _objectSpread from\"/Users/seanang/invesfe-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/seanang/invesfe-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as React from\"react\";import defaultState from\"./defaultStateBudget\";import\"../styles/Budget.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function BudgetForm(_ref){var onUpdate=_ref.onUpdate;var _React$useState=React.useState(defaultState),_React$useState2=_slicedToArray(_React$useState,2),state=_React$useState2[0],setState=_React$useState2[1];var newIncome=state.newIncome,newNeeds=state.newNeeds,newWants=state.newWants,newFinancialGoals=state.newFinancialGoals;return/*#__PURE__*/_jsxs(\"body\",{children:[/*#__PURE__*/_jsx(\"div\",{class:\"form-group\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"incomeBox\",children:[\"Input your Income:\",/*#__PURE__*/_jsx(\"input\",{className:\"income\",type:\"number\",value:newIncome,min:\"0\",onChange:function onChange(_ref2){var target=_ref2.target;return setState(_objectSpread(_objectSpread({},state),{},{newIncome:Number(target.value)}));},readonly:true}),/*#__PURE__*/_jsx(\"span\",{class:\"validity\"})]})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{class:\"text\",children:\"Percentage of allocations in your Budget\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{class:\"form-group\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"budgetBox\",children:[\"Input your % of Needs:\",/*#__PURE__*/_jsx(\"input\",{className:\"budget\",type:\"number\",value:newNeeds,min:\"0\",max:\"100\",onChange:function onChange(_ref3){var target=_ref3.target;return setState(_objectSpread(_objectSpread({},state),{},{newNeeds:Number(target.value)}));},readonly:true}),/*#__PURE__*/_jsx(\"span\",{class:\"validity\"})]})}),/*#__PURE__*/_jsx(\"div\",{class:\"form-group\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"budgetBox\",children:[\"Input your % of Wants:\",/*#__PURE__*/_jsx(\"input\",{className:\"budget\",type:\"number\",value:newWants,min:\"0\",max:\"100\",onChange:function onChange(_ref4){var target=_ref4.target;return setState(_objectSpread(_objectSpread({},state),{},{newWants:Number(target.value)}));},readonly:true}),/*#__PURE__*/_jsx(\"span\",{class:\"validity\"})]})}),/*#__PURE__*/_jsxs(\"div\",{class:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"budgetBox\",children:[\"Input your % of Financial Goals:\",/*#__PURE__*/_jsx(\"input\",{class:\"budget\",type:\"number\",value:newFinancialGoals,min:\"0\",max:\"100\",onChange:function onChange(_ref5){var target=_ref5.target;return setState(_objectSpread(_objectSpread({},state),{},{newFinancialGoals:Number(target.value)}));},readonly:true}),/*#__PURE__*/_jsx(\"span\",{class:\"validity\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mt-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-sm\",children:/*#__PURE__*/_jsx(\"button\",{className:\"budget-btn\",onClick:function onClick(){return canUpdate(newIncome,newNeeds,newWants,newFinancialGoals)?onUpdate(state):/*#__PURE__*/_jsx(\"p\",{children:\"Invalid Inputs \"});},children:\"Update Chart\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm\",children:canUpdate(newIncome,newNeeds,newWants,newFinancialGoals)?/*#__PURE__*/_jsx(\"p\",{id:\"terms\",children:\"Valid Inputs\"}):/*#__PURE__*/_jsx(\"p\",{id:\"terms\",children:\"Invalid Inputs, please ensure the allocation adds up to 100% \"})})]})]})]});}function canUpdate(newIncome,newNeeds,newWants,newFinancialGoals){return newNeeds>=0&&newNeeds<=100&&newWants>=0&&newWants<=100&&newFinancialGoals>=0&&newFinancialGoals<=100&&newIncome>=0&&newNeeds+newWants+newFinancialGoals===100;}export default BudgetForm;","map":{"version":3,"sources":["/Users/seanang/invesfe-app/src/components/BudgetForm.js"],"names":["React","defaultState","BudgetForm","onUpdate","useState","state","setState","newIncome","newNeeds","newWants","newFinancialGoals","target","Number","value","canUpdate"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport defaultState from \"./defaultStateBudget\";\nimport \"../styles/Budget.css\";\n\nfunction BudgetForm({ onUpdate }) {\n  const [state, setState] = React.useState(defaultState);\n\n  const { newIncome, newNeeds, newWants, newFinancialGoals } = state;\n\n  return (\n    <body>\n      <div class=\"form-group\">\n        <label className=\"incomeBox\">\n          Input your Income:\n          <input\n            className=\"income\"\n            type=\"number\"\n            value={newIncome}\n            min=\"0\"\n            onChange={({ target }) =>\n              setState({ ...state, newIncome: Number(target.value) })\n            }\n            readonly\n          />\n          <span class=\"validity\"></span>\n        </label>\n      </div>\n      <br></br>\n      <div class=\"text\">Percentage of allocations in your Budget</div>\n      <br></br>\n      <div class=\"form-group\">\n        <label className=\"budgetBox\">\n          Input your % of Needs:\n          <input\n            className=\"budget\"\n            type=\"number\"\n            value={newNeeds}\n            min=\"0\"\n            max=\"100\"\n            onChange={({ target }) =>\n              setState({ ...state, newNeeds: Number(target.value) })\n            }\n            readonly\n          />\n          <span class=\"validity\"></span>\n        </label>\n      </div>\n      <div class=\"form-group\">\n        <label className=\"budgetBox\">\n          Input your % of Wants:\n          <input\n            className=\"budget\"\n            type=\"number\"\n            value={newWants}\n            min=\"0\"\n            max=\"100\"\n            onChange={({ target }) =>\n              setState({ ...state, newWants: Number(target.value) })\n            }\n            readonly\n          />\n          <span class=\"validity\"></span>\n        </label>\n      </div>\n      <div class=\"form-group\">\n        <label className=\"budgetBox\">\n          Input your % of Financial Goals:\n          <input\n            class=\"budget\"\n            type=\"number\"\n            value={newFinancialGoals}\n            min=\"0\"\n            max=\"100\"\n            onChange={({ target }) =>\n              setState({ ...state, newFinancialGoals: Number(target.value) })\n            }\n            readonly\n          />\n          <span class=\"validity\"></span>\n        </label>\n        <br></br>\n        <div className='row mt-3'>\n        <div className='col-sm'>\n        <button\n          className=\"budget-btn\"\n          onClick={() =>\n            canUpdate(newIncome, newNeeds, newWants, newFinancialGoals) ? (\n              onUpdate(state)\n            ) : (\n              <p>Invalid Inputs </p>\n            )\n          }\n        >\n          Update Chart\n        </button>\n        </div>\n        <div className='col-sm'>\n        {canUpdate(newIncome, newNeeds, newWants, newFinancialGoals) ? (\n          <p id=\"terms\">Valid Inputs</p>\n        ) : (\n          <p id=\"terms\">Invalid Inputs, please ensure the allocation adds up to 100% </p>\n        )}\n          </div>\n          </div>\n      </div>\n    </body>\n  );\n}\n\nfunction canUpdate(newIncome, newNeeds, newWants, newFinancialGoals) {\n  return (\n    newNeeds >= 0 &&\n    newNeeds <= 100 &&\n    newWants >= 0 &&\n    newWants <= 100 &&\n    newFinancialGoals >= 0 &&\n    newFinancialGoals <= 100 &&\n    newIncome >= 0 &&\n    newNeeds + newWants + newFinancialGoals === 100\n  );\n}\n\nexport default BudgetForm;\n"]},"metadata":{},"sourceType":"module"}