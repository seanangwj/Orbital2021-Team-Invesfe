{"ast":null,"code":"// import React from \"react\";\n// import { Pie } from \"react-chartjs-2\";\n// function PortfolioChart(props) {\n//   const { stocks } = props;\n//   const stockNames = stocks.map((stock) => stock.symbol);\n//   const stockValue = stocks.map((stock) => stock.amount);\n//   const colorScale = 2;\n//   const colorRangeInfo = {\n//       colorStart: 0,\n//       colorEnd: 0.65,\n//       useEndAsStart: true\n//   }\n//   const colors = interpolateColors(stocks.length, colorScale, colorRangeInfo)\n//   const state = {\n//     labels: {stockNames},\n//     datasets: [\n//       {\n//         label: \"# of votes\",\n//         data: {stockValue},\n//         backgroundColor: colors,\n//         borderWidth: 1,\n//         cx: 400,\n//         cy: 400\n//       },\n//     ],\n//   };\n//   const options = {\n//     plugins: {\n//       legend: {\n//         display: true,\n//         position: \"bottom\",\n//       },\n//       title: {\n//         text: \"Portfolio\",\n//         display: true,\n//         fontSize: 100,\n//       },\n//     },\n//   };\n//   return (\n//     <div className=\"pie\">\n//       <Pie data={state} options={options} cx={800} cy={800} />\n//     </div>\n//   );\n// }\n// function calculatePoint(i, intervalSize, colorRangeInfo) {\n//     var { colorStart, colorEnd, useEndAsStart } = colorRangeInfo;\n//     return (useEndAsStart\n//       ? (colorEnd - (i * intervalSize))\n//       : (colorStart + (i * intervalSize)));\n//   }\n// function interpolateColors(dataLength, colorScale, colorRangeInfo) {\n//     var { colorStart, colorEnd } = colorRangeInfo;\n//     var colorRange = colorEnd - colorStart;\n//     var intervalSize = colorRange / dataLength;\n//     var i, colorPoint;\n//     var colorArray = [];\n//     for (i = 0; i < dataLength; i++) {\n//       colorPoint = calculatePoint(i, intervalSize, colorRangeInfo);\n//       colorArray.push(colorScale(colorPoint));\n//     }\n//     return colorArray;\n//   } \n//   export default PortfolioChart;","map":{"version":3,"sources":["/Users/seanang/invesfe-app/src/components/PortfolioChart.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA","sourcesContent":["// import React from \"react\";\n// import { Pie } from \"react-chartjs-2\";\n\n// function PortfolioChart(props) {\n//   const { stocks } = props;\n//   const stockNames = stocks.map((stock) => stock.symbol);\n//   const stockValue = stocks.map((stock) => stock.amount);\n//   const colorScale = 2;\n//   const colorRangeInfo = {\n//       colorStart: 0,\n//       colorEnd: 0.65,\n//       useEndAsStart: true\n//   }\n//   const colors = interpolateColors(stocks.length, colorScale, colorRangeInfo)\n//   const state = {\n//     labels: {stockNames},\n//     datasets: [\n//       {\n//         label: \"# of votes\",\n//         data: {stockValue},\n//         backgroundColor: colors,\n//         borderWidth: 1,\n//         cx: 400,\n//         cy: 400\n        \n//       },\n//     ],\n//   };\n\n//   const options = {\n//     plugins: {\n//       legend: {\n//         display: true,\n//         position: \"bottom\",\n//       },\n//       title: {\n//         text: \"Portfolio\",\n//         display: true,\n//         fontSize: 100,\n//       },\n//     },\n//   };\n\n//   return (\n//     <div className=\"pie\">\n//       <Pie data={state} options={options} cx={800} cy={800} />\n//     </div>\n//   );\n// }\n\n// function calculatePoint(i, intervalSize, colorRangeInfo) {\n//     var { colorStart, colorEnd, useEndAsStart } = colorRangeInfo;\n//     return (useEndAsStart\n//       ? (colorEnd - (i * intervalSize))\n//       : (colorStart + (i * intervalSize)));\n//   }\n// function interpolateColors(dataLength, colorScale, colorRangeInfo) {\n//     var { colorStart, colorEnd } = colorRangeInfo;\n//     var colorRange = colorEnd - colorStart;\n//     var intervalSize = colorRange / dataLength;\n//     var i, colorPoint;\n//     var colorArray = [];\n  \n//     for (i = 0; i < dataLength; i++) {\n//       colorPoint = calculatePoint(i, intervalSize, colorRangeInfo);\n//       colorArray.push(colorScale(colorPoint));\n//     }\n  \n//     return colorArray;\n//   } \n\n//   export default PortfolioChart;"]},"metadata":{},"sourceType":"module"}