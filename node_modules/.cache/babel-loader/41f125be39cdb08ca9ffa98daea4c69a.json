{"ast":null,"code":"var _jsxFileName = \"/Users/seanang/invesfe-app/src/budgetTracker/Budgett.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport ViewBudget from './ViewBudget';\nimport EditBudget from './EditBudget';\nimport { AppContext } from './AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Budgett = props => {\n  _s();\n\n  const {\n    dispatch\n  } = useContext(AppContext);\n  const {\n    budget\n  } = props;\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n\n  const handleSaveClick = value => {\n    dispatch({\n      type: 'SET_BUDGET',\n      payload: value\n    });\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"alert alert-secondary p-3 d-flex align-items-center justify-content-between\",\n    children: isEditing ? /*#__PURE__*/_jsxDEV(EditBudget, {\n      handleSaveClick: handleSaveClick,\n      budget: budget\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this) :\n    /*#__PURE__*/\n    // For part 1 render component inline rather than create a seperate one\n    _jsxDEV(ViewBudget, {\n      handleEditClick: handleEditClick,\n      budget: budget\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Budgett, \"ZiMMnhhqqbFvCrGU6RFHIt3nznE=\");\n\n_c = Budgett;\nexport default Budgett;\n\nvar _c;\n\n$RefreshReg$(_c, \"Budgett\");","map":{"version":3,"sources":["/Users/seanang/invesfe-app/src/budgetTracker/Budgett.js"],"names":["React","useState","useContext","ViewBudget","EditBudget","AppContext","Budgett","props","dispatch","budget","isEditing","setIsEditing","handleEditClick","handleSaveClick","value","type","payload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAeN,UAAU,CAACG,UAAD,CAA/B;AACA,QAAM;AAACI,IAAAA;AAAD,MAAWF,KAAjB;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMW,eAAe,GAAG,MAAM;AAC7BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,GAFD;;AAIA,QAAME,eAAe,GAAIC,KAAD,IAAW;AAClCN,IAAAA,QAAQ,CAAC;AACRO,MAAAA,IAAI,EAAE,YADE;AAERC,MAAAA,OAAO,EAAEF;AAFD,KAAD,CAAR;AAIAH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,GAND;;AAQA,sBACC;AAAK,IAAA,KAAK,EAAC,6EAAX;AAAA,cACED,SAAS,gBACT,QAAC,UAAD;AAAY,MAAA,eAAe,EAAEG,eAA7B;AAA8C,MAAA,MAAM,EAAEJ;AAAtD;AAAA;AAAA;AAAA;AAAA,YADS;AAAA;AAGT;AACA,YAAC,UAAD;AAAY,MAAA,eAAe,EAAEG,eAA7B;AAA8C,MAAA,MAAM,EAAEH;AAAtD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADD;AAUA,CA3BD;;GAAMH,O;;KAAAA,O;AA6BN,eAAeA,OAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport ViewBudget from './ViewBudget';\nimport EditBudget from './EditBudget';\nimport { AppContext } from './AppContext';\n\nconst Budgett = (props) => {\n\tconst { dispatch } = useContext(AppContext);\n\tconst {budget} = props;\n\tconst [isEditing, setIsEditing] = useState(false);\n\n\tconst handleEditClick = () => {\n\t\tsetIsEditing(true);\n\t};\n\n\tconst handleSaveClick = (value) => {\n\t\tdispatch({\n\t\t\ttype: 'SET_BUDGET',\n\t\t\tpayload: value,\n\t\t});\n\t\tsetIsEditing(false);\n\t};\n\n\treturn (\n\t\t<div class='alert alert-secondary p-3 d-flex align-items-center justify-content-between'>\n\t\t\t{isEditing ? (\n\t\t\t\t<EditBudget handleSaveClick={handleSaveClick} budget={budget} />\n\t\t\t) : (\n\t\t\t\t// For part 1 render component inline rather than create a seperate one\n\t\t\t\t<ViewBudget handleEditClick={handleEditClick} budget={budget} />\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Budgett;"]},"metadata":{},"sourceType":"module"}