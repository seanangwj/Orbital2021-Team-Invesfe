{"ast":null,"code":"var _jsxFileName = \"/Users/seanang/Orbital2021-Team-Invesfe/src/budgetTracker/Budgett.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport ViewBudget from \"./ViewBudget\";\nimport EditBudget from \"./EditBudget\";\nimport { AppContext } from \"./AppContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Budgett = props => {\n  _s();\n\n  const {\n    dispatch\n  } = useContext(AppContext);\n  const {\n    budget,\n    needs,\n    wants,\n    financialGoals\n  } = props;\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n\n  const handleSaveClick = value => {\n    dispatch({\n      type: \"SET_BUDGET\",\n      payload: value\n    });\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"alert alert-secondary p-3 d-flex align-items-center justify-content-between\",\n    children: isEditing ? /*#__PURE__*/_jsxDEV(EditBudget, {\n      handleSaveClick: handleSaveClick,\n      budget: budget\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // For part 1 render component inline rather than create a seperate one\n    _jsxDEV(ViewBudget, {\n      handleEditClick: handleEditClick,\n      budget: budget,\n      needs: needs,\n      wants: wants,\n      financialGoals: financialGoals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Budgett, \"ZiMMnhhqqbFvCrGU6RFHIt3nznE=\");\n\n_c = Budgett;\nexport default Budgett;\n\nvar _c;\n\n$RefreshReg$(_c, \"Budgett\");","map":{"version":3,"sources":["/Users/seanang/Orbital2021-Team-Invesfe/src/budgetTracker/Budgett.js"],"names":["React","useState","useContext","ViewBudget","EditBudget","AppContext","Budgett","props","dispatch","budget","needs","wants","financialGoals","isEditing","setIsEditing","handleEditClick","handleSaveClick","value","type","payload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAeN,UAAU,CAACG,UAAD,CAA/B;AACA,QAAM;AAAEI,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,MAA2CL,KAAjD;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMc,eAAe,GAAG,MAAM;AAC5BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAME,eAAe,GAAIC,KAAD,IAAW;AACjCT,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAE,YADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAIAH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,KAAK,EAAC,6EAAX;AAAA,cACGD,SAAS,gBACR,QAAC,UAAD;AAAY,MAAA,eAAe,EAAEG,eAA7B;AAA8C,MAAA,MAAM,EAAEP;AAAtD;AAAA;AAAA;AAAA;AAAA,YADQ;AAAA;AAGR;AACA,YAAC,UAAD;AACE,MAAA,eAAe,EAAEM,eADnB;AAEE,MAAA,MAAM,EAAEN,MAFV;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,KAAK,EAAEC,KAJT;AAKE,MAAA,cAAc,EAAEC;AALlB;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjCD;;GAAMN,O;;KAAAA,O;AAmCN,eAAeA,OAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport ViewBudget from \"./ViewBudget\";\nimport EditBudget from \"./EditBudget\";\nimport { AppContext } from \"./AppContext\";\n\nconst Budgett = (props) => {\n  const { dispatch } = useContext(AppContext);\n  const { budget, needs, wants, financialGoals } = props;\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n\n  const handleSaveClick = (value) => {\n    dispatch({\n      type: \"SET_BUDGET\",\n      payload: value,\n    });\n    setIsEditing(false);\n  };\n\n  return (\n    <div class=\"alert alert-secondary p-3 d-flex align-items-center justify-content-between\">\n      {isEditing ? (\n        <EditBudget handleSaveClick={handleSaveClick} budget={budget} />\n      ) : (\n        // For part 1 render component inline rather than create a seperate one\n        <ViewBudget\n          handleEditClick={handleEditClick}\n          budget={budget}\n          needs={needs}\n          wants={wants}\n          financialGoals={financialGoals}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Budgett;\n"]},"metadata":{},"sourceType":"module"}