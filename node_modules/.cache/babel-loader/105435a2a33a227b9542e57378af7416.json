{"ast":null,"code":"var _jsxFileName = \"/Users/seanang/invesfe-app/src/components/PortfolioChart.js\";\nimport React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PortfolioChart(props) {\n  const {\n    stocks\n  } = props;\n  const stockNames = stocks.map(stock => stock.symbol);\n  const stockValue = stocks.map(stock => stock.amount);\n  const colorScale = d3.interpolateCool;\n  const colorRangeInfo = {\n    colorStart: 0,\n    colorEnd: 0.65,\n    useEndAsStart: true\n  };\n  const colors = interpolateColors(stocks.length, colorScale, colorRangeInfo);\n  const state = {\n    labels: {\n      stockNames\n    },\n    datasets: [{\n      label: \"# of votes\",\n      data: {\n        stockValue\n      },\n      backgroundColor: colors,\n      borderWidth: 1,\n      cx: 400,\n      cy: 400\n    }]\n  };\n  const options = {\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\"\n      },\n      title: {\n        text: \"Portfolio\",\n        display: true,\n        fontSize: 100\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pie\",\n    children: /*#__PURE__*/_jsxDEV(Pie, {\n      data: state,\n      options: options,\n      cx: 800,\n      cy: 800\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PortfolioChart;\n\nfunction calculatePoint(i, intervalSize, colorRangeInfo) {\n  var {\n    colorStart,\n    colorEnd,\n    useEndAsStart\n  } = colorRangeInfo;\n  return useEndAsStart ? colorEnd - i * intervalSize : colorStart + i * intervalSize;\n}\n\nfunction interpolateColors(dataLength, colorScale, colorRangeInfo) {\n  var {\n    colorStart,\n    colorEnd\n  } = colorRangeInfo;\n  var colorRange = colorEnd - colorStart;\n  var intervalSize = colorRange / dataLength;\n  var i, colorPoint;\n  var colorArray = [];\n\n  for (i = 0; i < dataLength; i++) {\n    colorPoint = calculatePoint(i, intervalSize, colorRangeInfo);\n    colorArray.push(colorScale(colorPoint));\n  }\n\n  return colorArray;\n}\n\nexport default PortfolioChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioChart\");","map":{"version":3,"sources":["/Users/seanang/invesfe-app/src/components/PortfolioChart.js"],"names":["React","Pie","PortfolioChart","props","stocks","stockNames","map","stock","symbol","stockValue","amount","colorScale","d3","interpolateCool","colorRangeInfo","colorStart","colorEnd","useEndAsStart","colors","interpolateColors","length","state","labels","datasets","label","data","backgroundColor","borderWidth","cx","cy","options","plugins","legend","display","position","title","text","fontSize","calculatePoint","i","intervalSize","dataLength","colorRange","colorPoint","colorArray","push"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\n\nfunction PortfolioChart(props) {\n  const { stocks } = props;\n  const stockNames = stocks.map((stock) => stock.symbol);\n  const stockValue = stocks.map((stock) => stock.amount);\n\n  const colorScale = d3.interpolateCool;\n  const colorRangeInfo = {\n      colorStart: 0,\n      colorEnd: 0.65,\n      useEndAsStart: true\n  }\n  const colors = interpolateColors(stocks.length, colorScale, colorRangeInfo)\n  const state = {\n    labels: {stockNames},\n    datasets: [\n      {\n        label: \"# of votes\",\n        data: {stockValue},\n        backgroundColor: colors,\n        borderWidth: 1,\n        cx: 400,\n        cy: 400\n        \n      },\n    ],\n  };\n\n  const options = {\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\",\n      },\n      title: {\n        text: \"Portfolio\",\n        display: true,\n        fontSize: 100,\n      },\n    },\n  };\n\n  return (\n    <div className=\"pie\">\n      <Pie data={state} options={options} cx={800} cy={800} />\n    </div>\n  );\n}\n\nfunction calculatePoint(i, intervalSize, colorRangeInfo) {\n    var { colorStart, colorEnd, useEndAsStart } = colorRangeInfo;\n    return (useEndAsStart\n      ? (colorEnd - (i * intervalSize))\n      : (colorStart + (i * intervalSize)));\n  }\nfunction interpolateColors(dataLength, colorScale, colorRangeInfo) {\n    var { colorStart, colorEnd } = colorRangeInfo;\n    var colorRange = colorEnd - colorStart;\n    var intervalSize = colorRange / dataLength;\n    var i, colorPoint;\n    var colorArray = [];\n  \n    for (i = 0; i < dataLength; i++) {\n      colorPoint = calculatePoint(i, intervalSize, colorRangeInfo);\n      colorArray.push(colorScale(colorPoint));\n    }\n  \n    return colorArray;\n  } \n\n  export default PortfolioChart;"]},"metadata":{},"sourceType":"module"}