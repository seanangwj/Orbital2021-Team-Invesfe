{"ast":null,"code":"var _jsxFileName = \"/Users/seanang/Orbital2021-Team-Invesfe/src/components/CompoundInterestChart.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Label, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport Summary from \"./Summary\";\nimport { useEffect, useContext, useState } from \"react\";\nimport { db, fire } from \"../config/Firebase.js\";\nimport { UserContext } from \"./UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction renderTooltip({\n  payload\n}) {\n  if (!payload[0]) {\n    return;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: `£${payload[0].value.toFixed(2)}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n\nfunction CompoundInterestChart(props) {\n  _s();\n\n  const [state, setState] = useState(props.state);\n  const currentUser = useContext(UserContext);\n  useEffect(() => {\n    if (currentUser != null) {\n      db.child(\"users\").child(currentUser.uid).child(\"compound\").on(\"value\", snapshot => {\n        const array = snapshot.val();\n        setState(array);\n      });\n    }\n  }, []); // const {initialAmount,period,growthRate,yearlyContribution } = props;\n\n  const data = React.useMemo(() => {\n    const result = [];\n    result.push({\n      label: `0`,\n      value: state.initialAmount\n    });\n\n    for (let i = 1; i <= period; i++) {\n      let lastFutureValue = initialAmount + yearlyContribution;\n\n      if (result.length > 0) {\n        lastFutureValue = result[result.length - 1].value + yearlyContribution;\n      }\n\n      result.push({\n        label: `${i}`,\n        value: lastFutureValue * Math.pow(1 + growthRate / 100, 1)\n      });\n    }\n\n    return result;\n  }, [state.initialAmount, state.period, growthRate, yearlyContribution]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Projected Growth\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: 300\n      },\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 500,\n          height: 300,\n          data: data,\n          margin: {\n            top: 5,\n            right: 30,\n            left: 0,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"label\",\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              value: \"Years\",\n              offset: -3,\n              position: \"insideBottom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Summary, {\n      period: period,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CompoundInterestChart, \"AsDaCjnJWqDJpKTM6UeiesZ7m58=\");\n\n_c = CompoundInterestChart;\nexport default CompoundInterestChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompoundInterestChart\");","map":{"version":3,"sources":["/Users/seanang/Orbital2021-Team-Invesfe/src/components/CompoundInterestChart.js"],"names":["React","Label","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Summary","useEffect","useContext","useState","db","fire","UserContext","renderTooltip","payload","value","toFixed","CompoundInterestChart","props","state","setState","currentUser","child","uid","on","snapshot","array","val","data","useMemo","result","push","label","initialAmount","i","period","lastFutureValue","yearlyContribution","length","Math","pow","growthRate","width","height","top","right","left","bottom"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  Label,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer\n} from \"recharts\";\n\nimport Summary from \"./Summary\";\nimport { useEffect, useContext, useState } from \"react\";\nimport { db, fire } from \"../config/Firebase.js\";\nimport { UserContext } from \"./UserContext\";\n\nfunction renderTooltip({ payload }) {\n  if (!payload[0]) {\n    return;\n  }\n\n  return <span>{`£${payload[0].value.toFixed(2)}`}</span>;\n}\n\nfunction CompoundInterestChart(props) {\n  const [state, setState] = useState(props.state);\n  const currentUser = useContext(UserContext);\n\n  useEffect(() => {\n    if (currentUser != null) {\n      db.child(\"users\")\n        .child(currentUser.uid)\n        .child(\"compound\")\n        .on(\"value\", (snapshot) => {\n        const array = snapshot.val();\n        setState(array);\n    });\n  }}, []);\n\n  // const {initialAmount,period,growthRate,yearlyContribution } = props;\n  const data = React.useMemo(\n    () => {\n      const result = [];\n      result.push({\n        label: `0`,\n        value: state.initialAmount\n      })\n\n      for (let i = 1; i <= period; i++) {\n        let lastFutureValue = initialAmount + yearlyContribution;\n        if (result.length > 0) {\n          lastFutureValue = result[result.length - 1].value + yearlyContribution;\n        }\n        result.push({\n          label: `${i}`,\n          value: lastFutureValue * Math.pow(1 + growthRate / 100, 1)\n        });\n      }\n\n      return result;\n    },\n    [state.initialAmount, state.period, growthRate, yearlyContribution]\n  );\n\n  return (\n    <>\n      <h2>Projected Growth</h2>\n      <div style={{ width: \"100%\", height: 300 }}>\n        <ResponsiveContainer>\n          <LineChart\n            width={500}\n            height={300}\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 0,\n              bottom: 5\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"label\">\n              <Label value=\"Years\" offset={-3} position=\"insideBottom\" />\n            </XAxis>\n            <YAxis />\n            {/* <Tooltip content={renderTooltip} /> */}\n            <Line type=\"monotone\" dataKey=\"value\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n      <hr />\n      <Summary period={period} data={data} />\n    </>\n  );\n}\n\nexport default CompoundInterestChart;"]},"metadata":{},"sourceType":"module"}