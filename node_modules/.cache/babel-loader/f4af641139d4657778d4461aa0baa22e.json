{"ast":null,"code":"var _jsxFileName = \"/Users/seanang/invesfe-app/src/components/Portfolio.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport PortfolioChart from \"./PortfolioChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Portfolio() {\n  _s();\n\n  const [stocks, setStocks] = useState([]);\n  const [newStockName, setNewStockName] = useState(\" \");\n  const [newStockValue, setNewStockValue] = useState(\" \");\n  const [investmentValue, setNewInvestmetValue] = useState(\" \");\n\n  const handleAddStock = event => {\n    event.preventDefault();\n    const newStockList = [...stocks, {\n      symbol: newStockName,\n      amount: newStockValue,\n      color: getRandomColor()\n    }];\n    setStocks(newStockList);\n  };\n\n  var cashHoldings = investmentValue - stocks.reduce((prevValue, currentValue) => prevValue + currentValue.amount, 0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Input your Investment Value:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: investmentValue,\n        onChange: event => setNewInvestmetValue(event.target.value),\n        readonly: true,\n        class: \"total-input form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Add a Stock to your Portfolio! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddStock,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Ticker Symbol:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newStockName,\n            onChange: event => {\n              setNewStockName(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Amount invested:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newStockValue,\n            onChange: event => {\n              setNewStockValue(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), stocks.length > 0 ? /*#__PURE__*/_jsxDEV(StockList, {\n        stocks: stocks,\n        setStocks: setStocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No stocks added!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Cash Holdings:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), cashHoldings >= 0 ? cashHoldings : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"More Cash Needed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PortfolioChart, {\n        stocks: stocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Portfolio, \"Onu3xtzIU3yllnzF2lfdPRZ94LU=\");\n\n_c = Portfolio;\n\nfunction StockList(props) {\n  const {\n    stocks,\n    setStocks\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: {\n      margin: \"0 auto\",\n      width: \"100%\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"No.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Holdings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: stocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: stock.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", stock.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = StockList;\n\nfunction getRandomColor() {\n  var letters = '0123456789ABCDEF'.split('');\n  var color = '#';\n\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n\n  return color;\n}\n\nexport default Portfolio;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Portfolio\");\n$RefreshReg$(_c2, \"StockList\");","map":{"version":3,"sources":["/Users/seanang/invesfe-app/src/components/Portfolio.js"],"names":["useState","PortfolioChart","Portfolio","stocks","setStocks","newStockName","setNewStockName","newStockValue","setNewStockValue","investmentValue","setNewInvestmetValue","handleAddStock","event","preventDefault","newStockList","symbol","amount","color","getRandomColor","cashHoldings","reduce","prevValue","currentValue","target","value","length","StockList","props","margin","width","textAlign","map","stock","index","letters","split","i","Math","floor","random"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport PortfolioChart from \"./PortfolioChart\";\n\nfunction Portfolio() {\n  const [stocks, setStocks] = useState([]);\n  const [newStockName, setNewStockName] = useState(\" \");\n  const [newStockValue, setNewStockValue] = useState(\" \");\n  const [investmentValue, setNewInvestmetValue] = useState(\" \");\n  const handleAddStock = (event) => {\n    event.preventDefault();\n    const newStockList = [\n      ...stocks,\n      {\n        symbol: newStockName,\n        amount: newStockValue,\n        color: getRandomColor(),\n      },\n    ];\n    setStocks(newStockList);\n  };\n\n  var cashHoldings =\n     investmentValue  -\n    stocks.reduce(\n      (prevValue, currentValue) => prevValue + currentValue.amount,\n      0\n    );\n\n  return (\n    <>\n      <div>\n        <label>Input your Investment Value:</label>\n        <input\n          type=\"text\"\n          value={investmentValue}\n          onChange={(event) => setNewInvestmetValue(event.target.value)}\n          readonly\n          class=\"total-input form-control\"\n        />\n        <h2> Add a Stock to your Portfolio! </h2>\n        <form onSubmit={handleAddStock}>\n          <label>\n            Ticker Symbol:\n            <input\n              type=\"text\"\n              value={newStockName}\n              onChange={(event) => {\n                setNewStockName(event.target.value);\n              }}\n            />\n          </label>\n          <label>\n            Amount invested:\n            <input\n              type=\"text\"\n              value={newStockValue}\n              onChange={(event) => {\n                setNewStockValue(event.target.value);\n              }}\n            />\n          </label>\n          <input type=\"submit\" value=\"Add\" />\n        </form>\n      </div>\n\n      <div>\n        <h2>Portfolio</h2>\n        {stocks.length > 0 ? (\n          <StockList stocks={stocks} setStocks={setStocks} />\n        ) : (\n          <p> No stocks added!</p>\n        )}\n      </div>\n\n      <div>\n        <h3>Cash Holdings:</h3>\n        {cashHoldings >= 0 ? ( cashHoldings ) :( <p>More Cash Needed!</p>)}\n      </div>\n      <div>\n        <PortfolioChart stocks ={stocks} />\n      </div>\n    </>\n  );\n}\n\nfunction StockList(props) {\n  const { stocks, setStocks } = props;\n\n  return (\n    <table style={{ margin: \"0 auto\", width: \"100%\" , textAlign: \"center\"}}>\n      <thead>\n        <tr>\n          <th>No.</th>\n          <th>Holdings</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        {stocks.map((stock, index) => (\n          <tr key={index}>\n            <td>{index + 1}</td>\n            <td>{stock.symbol}</td>\n            <td> {stock.amount}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\nfunction getRandomColor() {\n  var letters = '0123456789ABCDEF'.split('');\n  var color = '#';\n  for (var i = 0; i < 6; i++ ) {\n      color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n  \n}\n\nexport default Portfolio;\n"]},"metadata":{},"sourceType":"module"}