[{"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/index.js":"1","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/reportWebVitals.js":"2","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/App.js":"3","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/config/Firebase.js":"4","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/Home.js":"5","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/Budget.js":"6","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/CompoundInterest.js":"7","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/IntrinsicValue.js":"8","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/Portfolio.js":"9","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/Navbar.js":"10","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/Login.js":"11","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/webpages/AboutUs.js":"12","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/BudgetChart.js":"13","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/defaultStateBudget.js":"14","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/BudgetForm.js":"15","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/CompoundInterestChart.js":"16","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/defaultState.js":"17","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/VariablesForm.js":"18","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/Tools.js":"19","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/PortfolioChart.js":"20","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/BudgetSummary.js":"21","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/Summary.js":"22","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/Remaining.js":"23","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/AppContext.js":"24","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/Budgett.js":"25","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/AddExpenseForm.js":"26","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/ExpenseTotal.js":"27","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/ExpenseList.js":"28","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/ViewBudget.js":"29","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/ExpenseItem.js":"30","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/EditBudget.js":"31","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/IntrinsicForm.js":"32"},{"size":809,"mtime":1625150539793,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1621499277752,"results":"35","hashOfConfig":"34"},{"size":1656,"mtime":1625150659622,"results":"36","hashOfConfig":"34"},{"size":564,"mtime":1625150598372,"results":"37","hashOfConfig":"34"},{"size":2100,"mtime":1624774493699,"results":"38","hashOfConfig":"34"},{"size":2327,"mtime":1624772178773,"results":"39","hashOfConfig":"34"},{"size":712,"mtime":1624358920503,"results":"40","hashOfConfig":"34"},{"size":4509,"mtime":1625146107771,"results":"41","hashOfConfig":"34"},{"size":7301,"mtime":1624783146922,"results":"42","hashOfConfig":"34"},{"size":2572,"mtime":1625150505664,"results":"43","hashOfConfig":"34"},{"size":1939,"mtime":1625129405593,"results":"44","hashOfConfig":"34"},{"size":1527,"mtime":1624362542935,"results":"45","hashOfConfig":"34"},{"size":1070,"mtime":1624772062776,"results":"46","hashOfConfig":"34"},{"size":149,"mtime":1624009065678,"results":"47","hashOfConfig":"34"},{"size":3366,"mtime":1624771881251,"results":"48","hashOfConfig":"34"},{"size":1895,"mtime":1623563374164,"results":"49","hashOfConfig":"34"},{"size":150,"mtime":1624782290070,"results":"50","hashOfConfig":"34"},{"size":2307,"mtime":1624026959622,"results":"51","hashOfConfig":"34"},{"size":633,"mtime":1624358903919,"results":"52","hashOfConfig":"34"},{"size":1254,"mtime":1624784211649,"results":"53","hashOfConfig":"34"},{"size":1081,"mtime":1624727297040,"results":"54","hashOfConfig":"34"},{"size":873,"mtime":1624029608434,"results":"55","hashOfConfig":"34"},{"size":526,"mtime":1624776091819,"results":"56","hashOfConfig":"34"},{"size":1418,"mtime":1624726017555,"results":"57","hashOfConfig":"34"},{"size":904,"mtime":1624726982661,"results":"58","hashOfConfig":"34"},{"size":1345,"mtime":1624779591974,"results":"59","hashOfConfig":"34"},{"size":387,"mtime":1624776084873,"results":"60","hashOfConfig":"34"},{"size":966,"mtime":1624722545538,"results":"61","hashOfConfig":"34"},{"size":267,"mtime":1624779563216,"results":"62","hashOfConfig":"34"},{"size":624,"mtime":1624776074796,"results":"63","hashOfConfig":"34"},{"size":500,"mtime":1624779497771,"results":"64","hashOfConfig":"34"},{"size":15492,"mtime":1625150042138,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fcttvi",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/index.js",[],"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/reportWebVitals.js",[],["144","145"],"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/App.js",["146","147","148","149","150"],"import React, { Component } from \"react\";\nimport Home from \"./Home\";\nimport {\n  FirebaseAuthConsumer,\n  IfFirebaseAuthed,\n  IfFirebaseUnAuthed,\n} from \"@react-firebase/auth\";\nimport Budget from \"./components/Budget\";\nimport CompoundInterest from \"./components/CompoundInterest\";\nimport IntrinsicValue from \"./components/IntrinsicValue\";\nimport Portfolio from \"./components/Portfolio\";\nimport AboutUs from \"./webpages/AboutUs\";\nimport Login from \"./components/Login\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { fire } from \"./config/Firebase\";\n\nclass App extends Component {\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     user: null,\n  //   };\n\n  //   this.authListener = this.authListener.bind(this);\n  // }\n\n  // componentDidMount() {\n  //   this.authListener();\n  // }\n\n  // authListener() {\n\n  //   fire.auth().onAuthStateChanged((user) => {\n  //     console.log(user);\n  //     if (user) {\n  //       this.setState({ user });\n  //     } else {\n  //       this.setState({ user: null });\n  //     }\n  //   });\n  // }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/budget\" component={Budget} />\n          <Route exact path=\"/compoundinterest\" component={CompoundInterest} />\n          <Route exact path=\"/intrinsicvalue\" component={IntrinsicValue} />\n          <Route exact path=\"/portfolio\" component={Portfolio} />\n          <Route exact path=\"/aboutus\" component={AboutUs} />\n          <Route exact path=\"/login\" component={Login} />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/config/Firebase.js",[],"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/Home.js",["151"],"import React from \"react\";\nimport NavBar from \"./components/Navbar\";\nimport background from \"./images/jewel.jpg\";\nimport { Route, Link } from \"react-router-dom\";\nimport \"./styles/Home.css\";\n\n\nfunction Home() {\n  return (\n    <>\n    <head>\n      \n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n<link href=\"https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap\" rel=\"stylesheet\" />\n\n</head>\n    <div>\n      <section className=\"home-header\">\n        <NavBar />\n      </section>\n      <div\n        className=\"home-main\"\n        style={{\n          backgroundImage: `linear-gradient(rgba(221, 224, 236, 0.3), rgba(221, 224, 236, 0.3)), url(${background})`,\n        }}\n      >\n        <div className=\"text-box\">\n          <h1>Welcome to Invesfe</h1>\n          <p>\n            All-in-one online platform to formulate and create your own\n            investment framework\n          </p>\n        </div>\n      </div>\n      <section class=\"tools\">\n        <h1>Financial Tools We Offer</h1>\n        <h2>\n          These tools will aid you in budgeting and planning your investments\n        </h2>\n\n        <div class=\"home-container\">\n          <div class=\"items\">\n            <h3>Budget Planner</h3>\n            <Link to=\"/budget\" class=\"hero-btn\">\n              CLICK HERE FOR MORE\n              </Link>\n          </div>\n          <div class=\"items\">\n            <h3>Valuation Model</h3>\n            <Link to=\"/intrinsicvalue\" class=\"hero-btn\">\n              CLICK HERE FOR MORE\n              </Link>\n          </div>\n          <div class=\"items\">\n            <h3>Compound Growth Calculator</h3>\n            <Link to=\"/compoundinterest\" class=\"hero-btn\">\n              CLICK HERE FOR MORE\n              </Link>\n          </div>\n          <div class=\"items\">\n            <h3>Portfolio Allocator</h3>\n            <Link to=\"/portfolio\" class=\"hero-btn\">\n              CLICK HERE FOR MORE\n              </Link>\n          </div>\n        </div>\n      </section>\n    </div>\n    </>\n  );\n  \n}\n\nexport default Home;\n","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/Budget.js",["152"],"import { useState } from \"react\";\nimport BudgetChart from \"./BudgetChart\";\nimport NavBar from \"./Navbar\";\nimport \"../styles/Budget.css\";\nimport BudgetForm from \"./BudgetForm\";\nimport * as React from \"react\";\nimport defaultState from \"./defaultStateBudget\";\nimport BudgetSummary from \"../budgetTracker/BudgetSummary\";\nfunction Budget() {\n\n  const [state, setState] = React.useState(defaultState);\n  \n\n  return (\n    <>\n      <section className=\"header\">\n      <NavBar/>\n      </section>\n      <div className =\"title\">Budget Planner</div>\n      <table className = \"budget-table\">\n        <thead>\n          <tr>\n            <th>Inputs</th>\n            <th>Pie Chart</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td><BudgetForm onUpdate={variables => setState(variables)}/>\n            <br></br>\n            <div id=\"note\">*Note: Ensure that the percetages of allocations adds up to 100%.*\n            <br></br>Hover on the Pie Chart to view the breakdown.\n            </div>\n            </td>\n            <td><BudgetChart style = {{height: \"1000px\" , width: \"1000px\"}}{...state}/></td>\n          </tr>\n        </tbody>\n      </table>    \n\n      <BudgetSummary budget={state.newIncome} />\n\n      {/* <section className=\"description\">\n        <h2> Guide and Relative information </h2>\n        <p>\n          Start by indicating your disposable income and the following inputs: needs, wants and financial goals, according to your own preference.\n          From this allocation, you should know roughly how much you are able to contribute to your investments. Head over to our compound growth calculator\n          to see how much you can grow you money!\n          <br></br>{\" \"}\n        </p>\n        <h3> Needs </h3>\n        <u1>\n          <li>Rent</li>\n          <li>Groceries</li>\n        </u1>\n        <h3> Wants </h3>\n        <u1>\n          <li>Entertainment Services </li>\n          <li>Hobbies </li>\n        </u1>\n        <h3> Financial Goals </h3>\n        <u1>\n          <li>Savings </li>\n          <li>Investment </li>\n        </u1>\n        <p>\n          {\" \"}\n          As with all budgetting rules out there, this is only a rough guide and\n          you can make your own adjustments to better suit your needs!{\" \"}\n        </p>\n      </section> */}\n    </>\n  );\n}\n\nexport default Budget;\n","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/CompoundInterest.js",["153"],"import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport VariablesForm from \"./VariablesForm\";\nimport CompoundInterestChart from \"./CompoundInterestChart\";\n\nimport defaultState from \"./defaultState\";\nimport NavBar from \"./Navbar\";\nimport \"../styles/CompoundInterest.css\";\n\nfunction CompoundInterest() {\n  const [state, setState] = React.useState(defaultState);\n\n  return (\n    <div>\n      <section className=\"header\">\n        <NavBar />\n      </section>\n      <div className =\"title\">Compound Growth Calculator</div>\n      <VariablesForm onUpdate={(variables) => setState(variables)} />\n      <hr />\n      <CompoundInterestChart {...state} />\n    </div>\n  );\n}\n\nexport default CompoundInterest;\n","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/IntrinsicValue.js",["154","155","156"],"import \"../styles/Intrinsic.css\";\nimport NavBar from \"./Navbar\";\nimport { Paper } from \"@material-ui/core\";\nimport React, { useState, useEffect } from 'react';\nimport IntrinsicForm from \"./IntrinsicForm\";\nimport {db} from \"../config/Firebase.js\";\n\nfunction IntrinsicValue() {\n  var [currentId, setCurrentId] = useState(\"\");\n  var [intrinsicObjects, setIntrinsicObjects] = useState({});\n\n  useEffect(() => {\n    db.child('intrinsic').on('value', snapshot => {\n        if (snapshot.val() != null) {\n            setIntrinsicObjects({\n                ...snapshot.val()\n            });\n        }\n    })\n}, [])\n\nconst addOrEdit = (obj) => {\n  if (currentId == '')\n      db.child('intrinsic').push(\n          obj,\n          err => {\n              if (err)\n                  console.log(err)\n              else\n                  setCurrentId('')\n          })\n  else\n      db.child(`intrinsic/${currentId}`).set(\n          obj,\n          err => {\n              if (err)\n                  console.log(err)\n              else\n                  setCurrentId('')\n          })\n}\n\nconst onDelete = id => {\n  if (window.confirm('Are you sure to delete this record?')) {\n      db.child(`intrinsic/${id}`).remove(\n          err => {\n              if (err)\n                  console.log(err)\n              else\n                  setCurrentId('')\n          })\n  }\n}\n\n  return (\n    <>\n      <section className=\"header\">\n        <NavBar />\n      </section>\n      <div className=\"title\">Valuation Model</div>\n      <Paper className=\"box\" elevation={3}>\n        <div className=\"intrinsic-guide\">\n          In this valuation model, we are following a discounted cash flow model\n          used to estimate the instrinsic value of an investment based on its\n          expected future cash flow. This analysis figures out the value of an\n          investment based on projections of how much cash a company will\n          generate in future. We will be using free cash flow to equity as a\n          measure of how much cash is available to equity shareholder of a\n          company after all the cash inflows and outflows. There are many more\n          valuation models out there and this model is just a basic and simple\n          version to help new investors get a sensing of trying to value a\n          company. It is not guaranteed that this model would be accurate as\n          this is just a projection based on each individual analysis. To start,\n          hover your cursor over the ? icon at each financial term to understand\n          them and also figure out how to find these data on the company's\n          financial reports. After keying in all the data, the table will\n          display the cash flow projections for the next 5 years. The final\n          intrinsic value per share of a company can be found at the bottom\n          highlighted in red. Note that all input values are in the millions.\n        </div>\n      </Paper>\n      <br></br>\n      <IntrinsicForm {...({ currentId, intrinsicObjects, addOrEdit })} />\n\n      <table className=\"valuation-bottom-table\">\n                        <thead>\n                            <tr>\n                                <th>Ticker Symbol</th>\n                                <th>Intrinsic Value</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                Object.keys(intrinsicObjects).map((key) => (\n                                    <tr key={key}>\n                                        <td>{intrinsicObjects[key].ticker}</td>\n                                        <td>{intrinsicObjects[key].intrinsicps}</td>\n                                        <td>\n                                            <a className=\"btn text-primary\" onClick={() => { setCurrentId(key) }}>\n                                                <i className=\"fas fa-pencil-alt\"></i>\n                                            </a>\n                                            <a className=\"btn text-danger\" onClick={() => { onDelete(key) }}>\n                                                <i className=\"far fa-trash-alt\"></i>\n                                            </a>\n                                        </td>\n                                    </tr>\n                                ))\n                            }\n                        </tbody>\n                    </table>\n\n\n    </>\n  );\n}\n\nexport default IntrinsicValue;\n","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/Portfolio.js",["157"],"import { useState } from \"react\";\nimport PortfolioChart from \"./PortfolioChart\";\nimport NavBar from \"./Navbar\";\nimport \"../styles/Portfolio.css\";\nimport { Tooltip, Icon,Paper, makeStyles } from \"@material-ui/core\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\n\nfunction Portfolio() {\n  const [stocks, setStocks] = useState([]);\n  const [newStockName, setNewStockName] = useState(\" \");\n  const [newStockValue, setNewStockValue] = useState(\" \");\n  const [investmentValue, setNewInvestmetValue] = useState(\" \");\n  const handleAddStock = (event) => {\n    event.preventDefault();\n    const newStockList = [\n      ...stocks,\n      {\n        symbol: newStockName,\n        amount: newStockValue,\n        color: getRandomColor(),\n      },\n    ];\n    setStocks(newStockList);\n  };\n\n  const handleReset = () => {\n    setStocks([]);\n  };\n\n  const getTotalValue = () => {\n    let total = 0;\n    for (let index = 0; index < stocks.length; index++) {\n      total += parseFloat(stocks[index].amount);\n    }\n    return total;\n  };\n\n  var cashHoldings = parseFloat(investmentValue) - getTotalValue();\n\n  \n  \n  const useStyles = makeStyles((theme) => ({\n    icon: {\n      margin: theme.spacing(1),\n    },\n  \n    customWidth: {\n      width: 1200,\n      height: 140,\n      fontSize: 15,\n    },\n  }));\n  const classes = useStyles();\n\n  const allWeather = \n <ul><li>30% total stock market</li><li>40% long-term bonds</li><li>15% intermediate bonds</li><li>7.5% commodities</li><li>7.5% gold</li></ul>;\n  const ivy =\n  <ul><li>20% US stocks</li><li>20% international stocks</li><li>20% bonds</li><li>20% commodities</li><li>20% REITs (Real Estate Investment Trust)</li></ul> \n \n return (\n    <>\n      <section className=\"header\">\n        <NavBar />\n      </section>\n      <div className=\"title\">Portfolio Allocator</div>\n      <Paper className=\"box\" elevation={3}>\n        <div className=\"portfolio-guide\">\n          A proper portfolio allocation is imperative for a solid invesment\n          foundation. There are many financial instruments to invest in or for\n          hedging and here are two recommended portfolio strategies for\n          beginners but do not that you do not have to follow strictly to the\n          allocation as this is just a rough guide. Financial instruments to\n          invest in are stocks, bonds, REITs, commodities, ETF, cryptocurrency\n          and more. Feel free to customise to your own preferences to achieve\n          your own ideal allocation.<br></br>\n          <br></br>\n          Hover over the ? icons to view the allocations.\n        </div>\n      </Paper>\n\n      <Paper className=\"box\" elevation={3}>\n            <h3>All-Weather Portfolio{\n                  <Tooltip\n                    title={allWeather}\n                    classes={{ tooltip: classes.customWidth }}\n                  >\n                    <Icon>\n                      <HelpOutlineIcon className={classes.icon} />\n                    </Icon>\n                  </Tooltip>\n                }</h3>\n            <h3>Ivy Portfolio{\n                  <Tooltip\n                    title={ivy}\n                    classes={{ tooltip: classes.customWidth }}\n                  >\n                    <Icon>\n                      <HelpOutlineIcon className={classes.icon} />\n                    </Icon>\n                  </Tooltip>\n                }</h3>\n        <br></br>\n      </Paper>\n      <table className=\"portfolio-table\">\n        <thead>\n          <tr>\n            <th>Inputs</th>\n            <th>Pie Chart</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <div>\n                <label>\n                  Input your Investment Value:\n                  <input\n                    className=\"portfolio\"\n                    type=\"number\"\n                    min=\"0\"\n                    placeholder=\"0\"\n                    value={investmentValue}\n                    onChange={(event) => {\n                      setNewInvestmetValue(event.target.value);\n                    }}\n                  />\n                  <span class=\"validity\"></span>\n                </label>\n\n                <div id=\"term\"> Add a Stock to your Portfolio!</div>\n                <form onSubmit={handleAddStock}>\n                  <label>\n                    Symbol:\n                    <input\n                      className=\"portfolio\"\n                      type=\"text\"\n                      required\n                      value={newStockName}\n                      onChange={(event) => {\n                        setNewStockName(event.target.value);\n                      }}\n                    />\n                  </label>\n                  <label>\n                    Amount invested:\n                    <input\n                      className=\"portfolio\"\n                      type=\"number\"\n                      min=\"0\"\n                      placeholder=\"0\"\n                      value={newStockValue}\n                      onChange={(event) => {\n                        setNewStockValue(event.target.value);\n                      }}\n                    />\n                    <span class=\"validity\"></span>\n                  </label>\n                  <input className=\"add-btn\" type=\"submit\" value=\"Add\" />\n                </form>\n              </div>\n            </td>\n            <td>\n              {stocks.length === 0 ? (\n                <p id=\"terms\">Portfolio is Empty!</p>\n              ) : (\n                <>\n                  <PortfolioChart stocks={stocks} />\n                  <button className=\"delete-btn\" onClick={() => handleReset()}>\n                    Reset\n                  </button>\n                </>\n              )}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div>\n        <div id=\"terms\">Portfolio</div>\n        {stocks.length > 0 ? (\n          <StockList stocks={stocks} setStocks={setStocks} />\n        ) : (\n          <p id=\"terms-1\"> No stocks added!</p>\n        )}\n      </div>\n\n      <div>\n        <div id=\"terms\">Cash Holdings:</div>\n        <p id=\"terms\">\n          {cashHoldings >= 0 ? cashHoldings : <p> More Cash Needed!</p>}\n        </p>\n      </div>\n    </>\n  );\n}\n\nfunction StockList(props) {\n  const { stocks, setStocks } = props;\n  const handleDeleteStock = (index) => {\n    const newStockList = stocks.filter(\n      (stock) => stocks.indexOf(stock) != index\n    );\n    setStocks(newStockList);\n  };\n\n  return (\n    <>\n      <table className=\"holdings-table\">\n        <thead>\n          <tr>\n            <th>No.</th>\n            <th>Holdings</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          {stocks.map((stock, index) => (\n            <tr key={index}>\n              <td>{index + 1}</td>\n              <td>{stock.symbol}</td>\n              <td> {stock.amount}</td>\n\n              <button\n                className=\"delete-btn\"\n                onClick={() => handleDeleteStock(index)}\n              >\n                Delete\n              </button>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n}\nfunction getRandomColor() {\n  var letters = \"0123456789ABCDEF\".split(\"\");\n  var color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nexport default Portfolio;\n","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/Navbar.js",["158","159","160","161"],"import React, { Component } from \"react\";\nimport Tools from \"./Tools\";\nimport logo from \"../images/logo.png\";\nimport Home from \"../Home\";\nimport {\n  FirebaseAuthConsumer,\n  IfFirebaseUnAuthed,\n  IfFirebaseAuthed,\n} from \"@react-firebase/auth\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { fire } from \"../config/Firebase\";\n\nfunction NavBar () {\n  const handleGoogleSignIn = (firebase) => {\n    const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(googleAuthProvider);\n  };\n\n  // constructor(props) {\n  //   super(props);\n  //   this.logout = this.logout.bind(this);\n  // }\n\n  const handleLogout = (firebase) => {\n    firebase.auth().signOut();\n  };\n\n  // logout() {\n  //   fire.auth().signOut();\n  // }\n \n    return (\n      <nav>\n        <a href={Home}>\n          <img src={logo} />\n        </a>\n        <div class=\"navbar\">\n          <ul>\n            <li>\n              <Link to=\"/\">HOME</Link>\n            </li>\n            <li>\n              <Link to=\"/aboutus\">ABOUT US</Link>\n            </li>\n            <Tools />\n\n            <li>\n             <IfFirebaseUnAuthed>\n            <FirebaseAuthConsumer>\n              {({ firebase }) => (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => handleGoogleSignIn(firebase)}\n                >\n                  Sign in with Google\n                </Button>\n              )}\n            </FirebaseAuthConsumer>\n            </IfFirebaseUnAuthed>\n            <IfFirebaseAuthed>\n          {({ user, firebase }) => (\n            <Button color=\"inherit\" onClick={() => handleLogout(firebase)}>\n              Logout\n            </Button>\n          )}\n        </IfFirebaseAuthed> \n              \n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n\n\nexport default NavBar;\n\n{\n  /* <IfFirebaseUnAuthed>\n            <FirebaseAuthConsumer>\n              {({ firebase }) => (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => handleGoogleSignIn(firebase)}\n                >\n                  Sign in with Google\n                </Button>\n              )}\n            </FirebaseAuthConsumer>\n            </IfFirebaseUnAuthed>\n            <IfFirebaseAuthed>\n          {({ user, firebase }) => (\n            <Button color=\"inherit\" onClick={() => handleLogout(firebase)}>\n              Logout\n            </Button>\n          )}\n        </IfFirebaseAuthed> */\n}\n","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/Login.js",["162"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {fire} from '../config/Firebase';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.login = this.login.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.signup = this.signup.bind(this);\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  login(e) {\n    e.preventDefault();\n    fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).catch((error) => {\n        console.log(error);\n      });\n  }\n\n  signup(e){\n    e.preventDefault();\n    fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\n    .catch((error) => {\n        console.log(error);\n      })\n  }\n  render() {\n    return (\n      <div className=\"col-md-6\">\n        <form>\n          <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Email address</label>\n            <input  value={this.state.email} onChange={this.handleChange} type=\"email\" name=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\n            <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"exampleInputPassword1\">Password</label>\n            <input  value={this.state.password} onChange={this.handleChange} type=\"password\" name=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\n          </div>\n          <button type=\"submit\" onClick={this.login} class=\"btn btn-primary\">Login</button>\n          <button onClick={this.signup} style={{marginLeft: '25px'}} className=\"btn btn-success\">Signup</button>\n        </form>\n      \n      </div>\n    );\n  }\n}\nexport default Login;\n","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/webpages/AboutUs.js",[],"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/BudgetChart.js",[],"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/defaultStateBudget.js",[],"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/BudgetForm.js",[],"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/CompoundInterestChart.js",["163","164"],"import * as React from \"react\";\nimport {\n  Label,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer\n} from \"recharts\";\n\nimport Summary from \"./Summary\";\n\nfunction renderTooltip({ payload }) {\n  if (!payload[0]) {\n    return;\n  }\n\n  return <span>{`£${payload[0].value.toFixed(2)}`}</span>;\n}\n\nfunction CompoundInterestChart({ initialAmount, period, growthRate, yearlyContribution }) {\n  const data = React.useMemo(\n    () => {\n      const result = [];\n      result.push({\n        label: `0`,\n        value: initialAmount\n      })\n\n      for (let i = 1; i <= period; i++) {\n        let lastFutureValue = initialAmount + yearlyContribution;\n        if (result.length > 0) {\n          lastFutureValue = result[result.length - 1].value + yearlyContribution;\n        }\n        result.push({\n          label: `${i}`,\n          value: lastFutureValue * Math.pow(1 + growthRate / 100, 1)\n        });\n      }\n\n      return result;\n    },\n    [initialAmount, period, growthRate, yearlyContribution]\n  );\n\n  return (\n    <>\n      <h2>Projected Growth</h2>\n      <div style={{ width: \"100%\", height: 300 }}>\n        <ResponsiveContainer>\n          <LineChart\n            width={500}\n            height={300}\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 0,\n              bottom: 5\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"label\">\n              <Label value=\"Years\" offset={-3} position=\"insideBottom\" />\n            </XAxis>\n            <YAxis />\n            {/* <Tooltip content={renderTooltip} /> */}\n            <Line type=\"monotone\" dataKey=\"value\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n      <hr />\n      <Summary period={period} data={data} />\n    </>\n  );\n}\n\nexport default CompoundInterestChart;","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/defaultState.js",[],"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/VariablesForm.js",[],"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/Tools.js",[],"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/PortfolioChart.js",["165","166"],"import React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { useState } from \"react\";\nimport \"../styles/Portfolio.css\";\n\nfunction PortfolioChart(props) {\n  const { stocks} = props;\n  const stockNames = stocks.map((stock) => stock.symbol);\n  const stockValue = stocks.map((stock) => stock.amount);\n  const colors = stocks.map((stock)=> stock.color);\n  \n  const state = {\n    labels: stockNames,\n    datasets: [\n      {\n        label: \"# of votes\",\n        data: stockValue,\n        backgroundColor: colors,\n        borderWidth: 1,\n        cx: 400,\n        cy: 400\n        \n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\",\n      },\n      title: {\n        text: \"Portfolio\",\n        display: false,\n        fontSize: 100,\n      },\n    },\n  };\n\n  return (\n    <div className=\"pie\">\n      <Pie data={state} options={options} cx={400} cy={400} />\n    </div>\n  );\n}\n\nfunction getRandomColor() {\n    var letters = '0123456789ABCDEF'.split('');\n    var color = '#';\n    for (var i = 0; i < 6; i++ ) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  export default PortfolioChart;","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/BudgetSummary.js",[],"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/Summary.js",[],"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/Remaining.js",[],"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/AppContext.js",["167"],"import React, { createContext, useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\n// 5. The reduceer - this is used to update the state, based on the action\nexport const AppReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'ADD_EXPENSE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\texpenses: [...state.expenses, action.payload],\n\t\t\t};\n\t\tcase 'DELETE_EXPENSE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\texpenses: state.expenses.filter(\n\t\t\t\t\t(expense) => expense.id !== action.payload\n\t\t\t\t),\n\t\t\t};\n\t\tcase 'SET_BUDGET':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tbudget: action.payload,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\n// 1. Sets the initial state when the app loads\nconst initialState = {\n\tbudget: 2000,\n\texpenses: [],\n};\n\n// 2. Creates the context this is the thing our components import and use to get the state\nexport const AppContext = createContext();\n\n// 3. Provider component - wraps the components we want to give access to the state\n// Accepts the children, which are the nested(wrapped) components\nexport const AppProvider = (props) => {\n\t// 4. Sets up the app state. takes a reducer, and an initial state\n\tconst [state, dispatch] = useReducer(AppReducer, initialState);\n\n\t// 5. Returns our context. Pass in the values we want to expose\n\treturn (\n\t\t<AppContext.Provider\n\t\t\tvalue={{\n\t\t\t\texpenses: state.expenses,\n\t\t\t\tbudget: state.budget,\n\t\t\t\tdispatch,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</AppContext.Provider>\n\t);\n};","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/Budgett.js",[],"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/AddExpenseForm.js",[],"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/ExpenseTotal.js",[],"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/ExpenseList.js",[],"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/ViewBudget.js",[],"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/ExpenseItem.js",[],"/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/budgetTracker/EditBudget.js",["168"],"import React, { useState } from 'react';\n\nconst EditBudget = (props) => {\n\tconst [value, setValue] = useState(props.budget);\n\treturn (\n\t\t<>\n\t\t\t<input\n\t\t\t\trequired='required'\n\t\t\t\ttype='number'\n\t\t\t\tclass='form-control mr-3'\n\t\t\t\tid='name'\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={(event) => setValue(event.target.value)}\n\t\t\t/>\n\t\t \n\t\t</>\n\t);\n};\n\nexport default EditBudget;\n\n {/* <button\n\t\t\t\ttype='button'\n\t\t\t\tclass='btn btn-primary'\n\t\t\t\tonClick={() => props.handleSaveClick(value)}\n\t\t\t>\n\t\t\t\tSave\n\t\t\t</button>  */}","/Users/seanang/Orbital2021-Team-Invesfe/invesfe-app/src/components/IntrinsicForm.js",["169","170","171","172","173"],"import { Tooltip, Icon, makeStyles } from \"@material-ui/core\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport { useState, useEffect } from \"react\";\nimport \"../styles/Intrinsic.css\";\n\nconst IntrinsicForm = (props) => {\n  const initialFieldValues = {\n    ticker: \"\",\n    profit: \"\",\n    depre: \"\",\n    working: \"\",\n    capex: \"\",\n    debt: \"\",\n    fresh: \"\",\n    shares: \"\",\n    ror: \"\",\n    growth: \"\",\n  };\n\n  const [values, setValues] = useState(initialFieldValues);\n\n  useEffect(() => {\n    if (props.currentId == \"\") setValues({ ...initialFieldValues });\n    else\n      setValues({\n        ...props.intrinsicObjects[props.currentId],\n      });\n  }, [props.currentId, props.intrinsicObjects]);\n\n  const handleInputChange = (e) => {\n    var { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    props.addOrEdit(values);\n  };\n\n  var fcfeY1 =\n    parseFloat(values.profit) +\n    parseFloat(values.depre) -\n    parseFloat(values.working) -\n    parseFloat(values.capex) -\n    parseFloat(values.debt) +\n    parseFloat(values.fresh);\n\n  const projectedFCFE = [];\n\n  const calculateIntrinsicValue = () => {\n    let iv = 0;\n    for (let index = 1; index <= 5; index++) {\n      iv +=\n        projectedFCFE[index - 1].value / Math.pow(1 + values.ror / 100, index);\n    }\n    iv +=\n      (projectedFCFE[4].value.toFixed(2) * (1 / (values.ror / 100))) /\n      Math.pow(1 + values.ror / 100, 5);\n    setValues({\n        ...values,\n        terminal: (projectedFCFE[4].value * (1 / (values.ror / 100))).toFixed(2),\n        intrinsic: (iv * 1).toFixed(2),\n        intrinsicps: (iv / values.shares).toFixed(2)\n      });\n\n  };\n\n  for (let index = 1; index <= 5; index++) {\n    projectedFCFE.push({\n      label: `${index}`,\n      value: fcfeY1 * Math.pow(1 + values.growth / 100, index - 1),\n    });\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    icon: {\n      margin: theme.spacing(1),\n    },\n\n    customWidth: {\n      width: 1200,\n      height: 250,\n      fontSize: 15,\n    },\n  }));\n  const classes = useStyles();\n\n  const profit =\n    \"Net profit after taxes is a financial term used to describe a company's profit after all taxes have been paid. This financial data can be found in income statement.\";\n  const depre =\n    \"Amortisation is the practice of spreading an intangible asset's over that asset's useful life. E.g. patents and trademarks. Depreciation is the allocation of cost of a fixed asset over its useful life. These financial data can be found in the income statement.\";\n  const working =\n    \"Working capital represents the difference between a firm's current assets and current liabilities and also the amount of money company has to pay off its short-term expenses. These financial data can be found in the cash flow statement.\";\n  const capex =\n    \"Capital Expenditure (CapEx) are funds used by a company to acquire, upgrade and maintain its physical assets like buildings. CapEx is essential for investment for growth. This financial data can be found in the cash flow statement.\";\n  const debt =\n    \"Debt repayment is the act of paying money back on a company's existing debt that includes the principal sum and interest. This involves cash outflow of the company. This financial data can be found in the cash flow statement.\";\n  const fresh =\n    \"Debt raised is a financing transaction involving cash inflow to the company for its operations. This financial data can be foundin the cash flow statement.\";\n  const shares =\n    \"Number of outstanding shares is simply the total number of shares issued and held by stockholders - both external and coportate investors. This can be found in the balance sheet.\";\n  const ror =\n    \"Required rate of return is the minimum amount of return an investor will seek for assuming the risk of investment. There is no right number and it depends on each individual. You would need to consider factors like the return of market as a whole and also rate if you took no risk. You could use long-term government bonds rate or the 10-year treasury yield as the risk free rate. We would recommend any rate between 5-7%\";\n  const growth =\n    \"This growth rate is dependent on each individual own analysis on the company as they estimate the rate of growth of the company free cash flow. A more aggressive investment on a growing company would have a larger growth rate while a more conservative investment would have a smaller growth rate.\";\n\n  return (\n    <>\n      <form autoComplete=\"off\" onSubmit={handleFormSubmit}>\n        <table className=\"valuation-table\">\n          <tbody>\n            <tr>\n              <td>\n                <label className=\"labelBox\">\n                  Ticker Symbol :{\" \"}\n                  <input\n                    className=\"intrinsic\"\n                    type=\"text\"\n                    id=\"ticker\"\n                    name=\"ticker\"\n                    value={values.ticker}\n                    onChange={handleInputChange}\n                  />\n                </label>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <label className=\"labelBox\">\n                  Net Profit after Tax ($) :{\" \"}\n                  {\n                    <Tooltip\n                      title={profit}\n                      classes={{ tooltip: classes.customWidth }}\n                    >\n                      <Icon>\n                        <HelpOutlineIcon className={classes.icon} />\n                      </Icon>\n                    </Tooltip>\n                  }\n                  <input\n                    className=\"intrinsic\"\n                    type=\"number\"\n                    step=\"0.01\"\n                    id=\"profit\"\n                    name=\"profit\"\n                    value={values.profit}\n                    onChange={handleInputChange}\n                  />\n                  <span class=\"validity\"></span>\n                </label>\n              </td>\n              <br></br>\n              <td>\n                <label className=\"labelBox\">\n                  Depreciation and Amortisation ($) :{\" \"}\n                  {\n                    <Tooltip\n                      title={depre}\n                      classes={{ tooltip: classes.customWidth }}\n                    >\n                      <Icon>\n                        <HelpOutlineIcon className={classes.icon} />\n                      </Icon>\n                    </Tooltip>\n                  }\n                  <input\n                    className=\"intrinsic\"\n                    type=\"number\"\n                    step=\"0.01\"\n                    id=\"depre\"\n                    name=\"depre\"\n                    value={values.depre}\n                    onChange={handleInputChange}\n                  />\n                  <span class=\"validity\"></span>\n                </label>\n              </td>\n              <br></br>\n              <td>\n                <label className=\"labelBox\">\n                  Increase in Working Capital ($) :{\" \"}\n                  {\n                    <Tooltip\n                      title={working}\n                      classes={{ tooltip: classes.customWidth }}\n                    >\n                      <Icon>\n                        <HelpOutlineIcon className={classes.icon} />\n                      </Icon>\n                    </Tooltip>\n                  }\n                  <input\n                    className=\"intrinsic\"\n                    type=\"number\"\n                    step=\"0.01\"\n                    id=\"working\"\n                    name=\"working\"\n                    value={values.working}\n                    onChange={handleInputChange}\n                  />\n                  <span class=\"validity\"></span>\n                </label>\n              </td>\n            </tr>\n            <br></br>\n            <tr>\n              <td>\n                <label className=\"labelBox\">\n                  Capital Expenditure ($) :{\" \"}\n                  {\n                    <Tooltip\n                      title={values.capex}\n                      classes={{ tooltip: classes.customWidth }}\n                    >\n                      <Icon>\n                        <HelpOutlineIcon className={classes.icon} />\n                      </Icon>\n                    </Tooltip>\n                  }\n                  <input\n                    className=\"intrinsic\"\n                    type=\"number\"\n                    step=\"0.01\"\n                    min=\"0\"\n                    id=\"capex\"\n                    name=\"capex\"\n                    value={values.capex}\n                    onChange={handleInputChange}\n                  />\n                  <span class=\"validity\"></span>\n                </label>\n              </td>\n              <br></br>\n              <td>\n                <label className=\"labelBox\">\n                  Debt Repayment on existing debt ($) :\n                  {\n                    <Tooltip\n                      title={debt}\n                      classes={{ tooltip: classes.customWidth }}\n                    >\n                      <Icon>\n                        <HelpOutlineIcon className={classes.icon} />\n                      </Icon>\n                    </Tooltip>\n                  }\n                  <input\n                    className=\"intrinsic\"\n                    type=\"number\"\n                    step=\"0.01\"\n                    id=\"debt\"\n                    name=\"debt\"\n                    min=\"0\"\n                    value={values.debt}\n                    onChange={handleInputChange}\n                  />\n                  <span class=\"validity\"></span>\n                </label>\n              </td>\n              <br></br>\n              <td>\n                <label className=\"labelBox\">\n                  Fresh Debt Raised ($) :{\" \"}\n                  {\n                    <Tooltip\n                      title={fresh}\n                      classes={{ tooltip: classes.customWidth }}\n                    >\n                      <Icon>\n                        <HelpOutlineIcon className={classes.icon} />\n                      </Icon>\n                    </Tooltip>\n                  }\n                  <input\n                    className=\"intrinsic\"\n                    type=\"number\"\n                    step=\"0.01\"\n                    id=\"fresh\"\n                    min=\"0\"\n                    name=\"fresh\"\n                    value={values.fresh}\n                    onChange={handleInputChange}\n                  />\n                  <span class=\"validity\"></span>\n                </label>\n              </td>\n            </tr>\n            <br></br>\n            <tr>\n              <td>\n                <label className=\"labelBox\">\n                  No. of Outstanding Shares :{\" \"}\n                  {\n                    <Tooltip\n                      title={values.shares}\n                      classes={{ tooltip: classes.customWidth }}\n                    >\n                      <Icon>\n                        <HelpOutlineIcon className={classes.icon} />\n                      </Icon>\n                    </Tooltip>\n                  }\n                  <input\n                    className=\"intrinsic\"\n                    type=\"number\"\n                    id=\"shares\"\n                    name=\"shares\"\n                    min=\"1\"\n                    value={values.shares}\n                    onChange={handleInputChange}\n                  />\n                  <span class=\"validity\"></span>\n                </label>\n              </td>\n              <br></br>\n              <td>\n                <label className=\"labelBox\">\n                  Required rate of return (%) :{\" \"}\n                  {\n                    <Tooltip\n                      title={ror}\n                      classes={{ tooltip: classes.customWidth }}\n                    >\n                      <Icon>\n                        <HelpOutlineIcon className={classes.icon} />\n                      </Icon>\n                    </Tooltip>\n                  }\n                  <input\n                    className=\"intrinsic\"\n                    type=\"number\"\n                    step=\"0.01\"\n                    id=\"ror\"\n                    name=\"ror\"\n                    min=\"0\"\n                    value={values.ror}\n                    onChange={handleInputChange}\n                  />\n                  <span class=\"validity\"></span>\n                </label>\n              </td>\n              <br></br>\n              <td>\n                <label className=\"labelBox\">\n                  FCFE Growth Rate (%) :{\" \"}\n                  {\n                    <Tooltip\n                      title={growth}\n                      classes={{ tooltip: classes.customWidth }}\n                    >\n                      <Icon>\n                        <HelpOutlineIcon className={classes.icon} />\n                      </Icon>\n                    </Tooltip>\n                  }\n                  <input\n                    className=\"intrinsic\"\n                    type=\"number\"\n                    step=\"0.01\"\n                    id=\"growth\"\n                    name=\"growth\"\n                    min=\"0\"\n                    value={values.growth}\n                    onChange={handleInputChange}\n                  />\n                  <span class=\"validity\"></span>\n                </label>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <div>\n          <input\n            type=\"submit\"\n            value={props.currentId == \"\" ? \"Save\" : \"Update\"}\n            className=\"save-btn\"\n          />\n        </div>\n      </form>\n      <button\n        className=\"intrinsic-btn\"\n        onClick={() => calculateIntrinsicValue()}\n      >\n        Calculate\n      </button>\n\n      <table className=\"valuation-mid-table\">\n        <tr>\n          <td>\n            <label className=\"labelBox\">\n              Terminal Value =\n              <input\n                type=\"number\"\n                id=\"terminal\"\n                name=\"terminal\"\n                value={values.terminal}\n                onChange={handleInputChange}\n              />\n            </label>\n            <br></br>\n            <label className=\"labelBox\">\n              Intrinsic Value For Company =\n              <input\n                type=\"number\"\n                id=\"intrinsicfc\"\n                name=\"intrinsicfc\"\n                value={values.intrinsic}\n                onChange={handleInputChange}\n              />\n            </label>\n            <br></br>\n            <label className=\"final-labelBox\">\n              Intrinsic Value per Share =\n              <input\n                type=\"number\"\n                id=\"intrinsicps\"\n                name=\"intrinsicps\"\n                value={values.intrinsicps}\n                onChange={handleInputChange}\n              />\n            </label>\n          </td>\n          <td>\n            <table className=\"value-table\">\n              <thead>\n                <tr>\n                  <th>Year</th>\n                  <th>Projected FCFE</th>\n                </tr>\n              </thead>\n              <tbody>\n                {projectedFCFE.map(({ label, value }) => (\n                  <tr key={label}>\n                    <td>{label}</td>\n                    <td>${value.toFixed(2)} </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </td>\n          <td></td>\n        </tr>\n      </table>\n    </>\n  );\n};\n\nexport default IntrinsicForm;\n",{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":4,"column":3,"nodeType":"180","messageId":"181","endLine":4,"endColumn":23},{"ruleId":"178","severity":1,"message":"182","line":5,"column":3,"nodeType":"180","messageId":"181","endLine":5,"endColumn":19},{"ruleId":"178","severity":1,"message":"183","line":6,"column":3,"nodeType":"180","messageId":"181","endLine":6,"endColumn":21},{"ruleId":"178","severity":1,"message":"184","line":14,"column":42,"nodeType":"180","messageId":"181","endLine":14,"endColumn":48},{"ruleId":"178","severity":1,"message":"185","line":15,"column":10,"nodeType":"180","messageId":"181","endLine":15,"endColumn":14},{"ruleId":"178","severity":1,"message":"186","line":4,"column":10,"nodeType":"180","messageId":"181","endLine":4,"endColumn":15},{"ruleId":"178","severity":1,"message":"187","line":1,"column":10,"nodeType":"180","messageId":"181","endLine":1,"endColumn":18},{"ruleId":"178","severity":1,"message":"188","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":16},{"ruleId":"189","severity":1,"message":"190","line":23,"column":17,"nodeType":"191","messageId":"192","endLine":23,"endColumn":19},{"ruleId":"193","severity":1,"message":"194","line":100,"column":45,"nodeType":"195","endLine":100,"endColumn":115},{"ruleId":"193","severity":1,"message":"194","line":103,"column":45,"nodeType":"195","endLine":103,"endColumn":110},{"ruleId":"189","severity":1,"message":"196","line":201,"column":40,"nodeType":"191","messageId":"192","endLine":201,"endColumn":42},{"ruleId":"178","severity":1,"message":"197","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":26},{"ruleId":"178","severity":1,"message":"185","line":12,"column":10,"nodeType":"180","messageId":"181","endLine":12,"endColumn":14},{"ruleId":"198","severity":1,"message":"199","line":36,"column":11,"nodeType":"195","endLine":36,"endColumn":29},{"ruleId":"200","severity":1,"message":"201","line":80,"column":1,"nodeType":"202","messageId":"203","endLine":101,"endColumn":2},{"ruleId":"178","severity":1,"message":"204","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":14},{"ruleId":"178","severity":1,"message":"205","line":9,"column":3,"nodeType":"180","messageId":"181","endLine":9,"endColumn":10},{"ruleId":"178","severity":1,"message":"206","line":15,"column":10,"nodeType":"180","messageId":"181","endLine":15,"endColumn":23},{"ruleId":"178","severity":1,"message":"187","line":3,"column":10,"nodeType":"180","messageId":"181","endLine":3,"endColumn":18},{"ruleId":"178","severity":1,"message":"207","line":50,"column":10,"nodeType":"180","messageId":"181","endLine":50,"endColumn":24},{"ruleId":"178","severity":1,"message":"208","line":2,"column":16,"nodeType":"180","messageId":"181","endLine":2,"endColumn":22},{"ruleId":"200","severity":1,"message":"201","line":22,"column":2,"nodeType":"202","messageId":"203","endLine":28,"endColumn":18},{"ruleId":"189","severity":1,"message":"190","line":23,"column":25,"nodeType":"191","messageId":"192","endLine":23,"endColumn":27},{"ruleId":"209","severity":1,"message":"210","line":28,"column":6,"nodeType":"211","endLine":28,"endColumn":47,"suggestions":"212"},{"ruleId":"178","severity":1,"message":"213","line":97,"column":9,"nodeType":"180","messageId":"181","endLine":97,"endColumn":14},{"ruleId":"178","severity":1,"message":"214","line":103,"column":9,"nodeType":"180","messageId":"181","endLine":103,"endColumn":15},{"ruleId":"189","severity":1,"message":"190","line":380,"column":36,"nodeType":"191","messageId":"192","endLine":380,"endColumn":38},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'FirebaseAuthConsumer' is defined but never used.","Identifier","unusedVar","'IfFirebaseAuthed' is defined but never used.","'IfFirebaseUnAuthed' is defined but never used.","'Switch' is defined but never used.","'fire' is defined but never used.","'Route' is defined but never used.","'useState' is defined but never used.","'ReactDOM' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '!==' and instead saw '!='.","'Component' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Link' is defined but never used.","'Tooltip' is defined but never used.","'renderTooltip' is defined but never used.","'getRandomColor' is defined but never used.","'uuidv4' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialFieldValues'. Either include it or remove the dependency array.","ArrayExpression",["217"],"'capex' is assigned a value but never used.","'shares' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},"Update the dependencies array to be: [initialFieldValues, props.currentId, props.intrinsicObjects]",{"range":"220","text":"221"},[674,715],"[initialFieldValues, props.currentId, props.intrinsicObjects]"]