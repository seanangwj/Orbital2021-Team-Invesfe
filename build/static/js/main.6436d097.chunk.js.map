{"version":3,"sources":["reportWebVitals.js","components/Tools.js","images/logo.png","components/Navbar.js","images/jewel.jpg","Home.js","components/BudgetChart.js","components/defaultStateBudget.js","components/BudgetForm.js","budgetTracker/AppContext.js","budgetTracker/ViewBudget.js","budgetTracker/EditBudget.js","budgetTracker/Budgett.js","budgetTracker/ExpenseTotal.js","budgetTracker/ExpenseItem.js","budgetTracker/ExpenseList.js","budgetTracker/AddExpenseForm.js","budgetTracker/Remaining.js","budgetTracker/BudgetSummary.js","components/Budget.js","components/defaultState.js","components/VariablesForm.js","components/Summary.js","components/CompoundInterestChart.js","components/CompoundInterest.js","components/IntrinsicValue.js","components/PortfolioChart.js","components/Portfolio.js","images/sean.jpg","images/weehng.jpg","webpages/AboutUs.js","components/Login.js","App.js","index.js","config/Firebase.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Tools","class","to","NavBar","props","href","Home","src","logo","firebase","Button","variant","color","onClick","googleAuthProvider","auth","GoogleAuthProvider","signInWithPopup","handleGoogleSignIn","user","signOut","handleLogout","rel","crossorigin","className","style","backgroundImage","background","BudgetChart","newIncome","state","labels","datasets","label","data","newNeeds","newWants","newFinancialGoals","backgroundColor","borderWidth","cx","cy","options","responsive","maintainAspectRatio","plugins","legend","display","position","align","boxWidth","boxHeight","title","text","fontSize","defaultStateBudget","canUpdate","BudgetForm","onUpdate","React","defaultState","setState","type","value","min","onChange","target","Number","readonly","max","id","AppReducer","action","expenses","payload","filter","expense","budget","initialState","AppContext","createContext","AppProvider","useReducer","dispatch","Provider","children","ViewBudget","EditBudget","useState","setValue","required","event","Budgett","useContext","isEditing","setIsEditing","handleSaveClick","handleEditClick","ExpenseTotal","total","reduce","item","cost","ExpenseItem","name","size","ExpenseList","filteredExpenses","setfilteredExpenses","useEffect","placeholder","searchResults","filteredExpense","toLowerCase","includes","map","AddExpenseForm","setName","setCost","onSubmit","preventDefault","uuidv4","parseInt","autoComplete","for","RemainingBudget","totalExpenses","alertType","BudgetSummary","Remaining","Budget","variables","height","width","initialAmount","period","growthRate","yearlyContribution","VariablesForm","htmlFor","Summary","length","toFixed","replace","scope","CompoundInterestChart","result","push","i","lastFutureValue","Math","pow","ResponsiveContainer","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","Label","offset","YAxis","Line","CompoundInterest","useStyles","makeStyles","theme","icon","spacing","customWidth","IntrinsicValue","netProfit","newNetProfit","depAndAmort","newDepAndAmort","increaseInWC","newIncreaseINWC","capitalExpenditure","newCapitalExpenditure","debtRepayment","newDebtRepayment","debtRaised","newDebtRaised","numOfShares","newNumOfShares","rateOfReturn","newRateOfReturn","fcfeGrowth","newFcfeGrowth","intrinsicValue","newIntrinsicValue","fcfeY1","array","parseFloat","projectedFCFE","index","classes","Paper","elevation","Tooltip","tooltip","Icon","step","iv","calculateIntrinsicValue","PortfolioChart","stocks","stock","symbol","amount","StockList","setStocks","newStockList","indexOf","handleDeleteStock","getRandomColor","letters","split","floor","random","Portfolio","newStockName","setNewStockName","newStockValue","setNewStockValue","investmentValue","setNewInvestmetValue","cashHoldings","getTotalValue","allWeather","ivy","AboutUs","weehng","alt","sean","Login","email","setEmail","password","setPassword","handleLogIn","handleSignUp","hasAccount","setHasAccount","emailError","passwordError","autoFocus","e","App","exact","path","component","ReactDOM","render","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","document","getElementById"],"mappings":"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","file":"static/js/main.6436d097.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Link} from \"react-router-dom\";\n\nfunction Tools() {\n\n    return(\n        <div class=\"dropdown\">\n        <button class=\"dropbtn\">TOOLS</button>\n        <div class=\"dropdown-content\">\n        <Link to=\"/budget\">\n              Budget Planner\n              </Link>\n              <Link to=\"/intrinsicvalue\">\n              Intrinsic Value Calculator\n              </Link>\n              <Link to=\"/compoundinterest\">\n              Compound Growth Calculator\n              </Link>\n              <Link to=\"/portfolio\">\n              Portfolio Allocator\n              </Link>\n        </div>\n        </div>\n    )\n}\n\nexport default Tools;","export default __webpack_public_path__ + \"static/media/logo.4f727936.png\";","import Tools from \"./Tools\";\nimport logo from \"../images/logo.png\";\nimport Home from \"../Home\";\nimport { FirebaseAuthConsumer, IfFirebaseUnAuthed, IfFirebaseAuthed } from \"@react-firebase/auth\";\nimport { Button } from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\n\nfunction NavBar(props) {\n\n  const handleGoogleSignIn = (firebase) => {\n    const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(googleAuthProvider);\n  };\n\n  \n  const handleLogout = (firebase) => {\n    firebase.auth().signOut();\n  };\n\n  return (\n    <nav>\n      <a href={Home}>\n        <img src={logo} />\n      </a>\n      <div class=\"navbar\">\n        <ul>\n          <li>\n            <Link to=\"/\">HOME</Link>\n          </li>\n          <li>\n          <Link to=\"/aboutus\">ABOUT US</Link>\n          </li>\n          <Tools />\n          \n          <li>\n            <IfFirebaseUnAuthed>\n            <FirebaseAuthConsumer>\n              {({ firebase }) => (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => handleGoogleSignIn(firebase)}\n                >\n                  Sign in with Google\n                </Button>\n              )}\n            </FirebaseAuthConsumer>\n            </IfFirebaseUnAuthed>\n            <IfFirebaseAuthed>\n          {({ user, firebase }) => (\n            <Button color=\"inherit\" onClick={() => handleLogout(firebase)}>\n              Logout\n            </Button>\n          )}\n        </IfFirebaseAuthed> \n           \n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default NavBar;\n\n{/* <IfFirebaseUnAuthed>\n            <FirebaseAuthConsumer>\n              {({ firebase }) => (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => handleGoogleSignIn(firebase)}\n                >\n                  Sign in with Google\n                </Button>\n              )}\n            </FirebaseAuthConsumer>\n            </IfFirebaseUnAuthed>\n            <IfFirebaseAuthed>\n          {({ user, firebase }) => (\n            <Button color=\"inherit\" onClick={() => handleLogout(firebase)}>\n              Logout\n            </Button>\n          )}\n        </IfFirebaseAuthed> */}","export default __webpack_public_path__ + \"static/media/jewel.85703e21.jpg\";","import React from \"react\";\nimport NavBar from \"./components/Navbar\";\nimport background from \"./images/jewel.jpg\";\nimport { Route, Link } from \"react-router-dom\";\nimport \"./styles/Home.css\";\n\n\nfunction Home() {\n  return (\n    <>\n    <head>\n      \n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n<link href=\"https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap\" rel=\"stylesheet\" />\n\n</head>\n    <div>\n      <section className=\"home-header\">\n        <NavBar />\n      </section>\n      <div\n        className=\"home-main\"\n        style={{\n          backgroundImage: `linear-gradient(rgba(221, 224, 236, 0.3), rgba(221, 224, 236, 0.3)), url(${background})`,\n        }}\n      >\n        <div className=\"text-box\">\n          <h1>Welcome to Invesfe</h1>\n          <p>\n            All-in-one online platform to formulate and create your own\n            investment framework\n          </p>\n        </div>\n      </div>\n      <section class=\"tools\">\n        <h1>Financial Tools We Offer</h1>\n        <h2>\n          These tools will aid you in budgeting and planning your investments\n        </h2>\n\n        <div class=\"home-container\">\n          <div class=\"items\">\n            <h3>Budget Planner</h3>\n            <Link to=\"/budget\" class=\"hero-btn\">\n              CLICK HERE FOR MORE\n              </Link>\n          </div>\n          <div class=\"items\">\n            <h3>Valuation Model</h3>\n            <Link to=\"/intrinsicvalue\" class=\"hero-btn\">\n              CLICK HERE FOR MORE\n              </Link>\n          </div>\n          <div class=\"items\">\n            <h3>Compound Growth Calculator</h3>\n            <Link to=\"/compoundinterest\" class=\"hero-btn\">\n              CLICK HERE FOR MORE\n              </Link>\n          </div>\n          <div class=\"items\">\n            <h3>Portfolio Allocator</h3>\n            <Link to=\"/portfolio\" class=\"hero-btn\">\n              CLICK HERE FOR MORE\n              </Link>\n          </div>\n        </div>\n      </section>\n    </div>\n    </>\n  );\n  \n}\n\nexport default Home;\n","import React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport \"../styles/Budget.css\";\n\nfunction BudgetChart({ newIncome, newNeeds, newWants, newFinancialGoals }) {\n  const state = {\n    labels: [\"Needs\", \"Wants\", \"Financial Goals\"],\n    datasets: [\n      {\n        label: \"# of votes\",\n        data: [\n          newIncome * (newNeeds / 100),\n          newIncome * (newWants / 100),\n          newIncome * (newFinancialGoals / 100),\n        ],\n        backgroundColor: [\"#2adece\", \"#dd3b79\", \"#ff766b\"],\n        borderWidth: 1,\n        cx:400,\n        cy:400,\n      },\n    ],\n  };\n\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\",\n        align:\"center\",\n        boxWidth: 800,\n        boxHeight: 600,\n      },\n      title: {\n        text: \"Budget Pie Chart\",\n        display: false,\n        fontSize: 100,\n      },\n    },\n  };\n\n  return (\n    <Pie className=\"pie\" data={state} options={options} cx={400} cy={400} />\n  );\n}\n\nexport default BudgetChart;\n","const defaultStateBudget = {\n    newIncome: 4000,\n    newNeeds: 50,\n    newWants: 30,\n    newFinancialGoals: 20\n}\n\nexport default defaultStateBudget;","import * as React from \"react\";\nimport defaultState from \"./defaultStateBudget\";\nimport \"../styles/Budget.css\";\n\nfunction BudgetForm({ onUpdate }) {\n  const [state, setState] = React.useState(defaultState);\n\n  const { newIncome, newNeeds, newWants, newFinancialGoals } = state;\n\n  return (\n    <body>\n      <div class=\"form-group\">\n        <label className=\"incomeBox\">\n          Input your Income:\n          <input\n            className=\"income\"\n            type=\"number\"\n            value={newIncome}\n            min=\"0\"\n            onChange={({ target }) =>\n              setState({ ...state, newIncome: Number(target.value) })\n            }\n            readonly\n          />\n          <span class=\"validity\"></span>\n        </label>\n      </div>\n      <br></br>\n      <div class=\"text\">Percentage of allocations in your Budget</div>\n      <br></br>\n      <div class=\"form-group\">\n        <label className=\"budgetBox\">\n          Input your % of Needs:\n          <input\n            className=\"budget\"\n            type=\"number\"\n            value={newNeeds}\n            min=\"0\"\n            max=\"100\"\n            onChange={({ target }) =>\n              setState({ ...state, newNeeds: Number(target.value) })\n            }\n            readonly\n          />\n          <span class=\"validity\"></span>\n        </label>\n      </div>\n      <div class=\"form-group\">\n        <label className=\"budgetBox\">\n          Input your % of Wants:\n          <input\n            className=\"budget\"\n            type=\"number\"\n            value={newWants}\n            min=\"0\"\n            max=\"100\"\n            onChange={({ target }) =>\n              setState({ ...state, newWants: Number(target.value) })\n            }\n            readonly\n          />\n          <span class=\"validity\"></span>\n        </label>\n      </div>\n      <div class=\"form-group\">\n        <label className=\"budgetBox\">\n          Input your % of Financial Goals:\n          <input\n            class=\"budget\"\n            type=\"number\"\n            value={newFinancialGoals}\n            min=\"0\"\n            max=\"100\"\n            onChange={({ target }) =>\n              setState({ ...state, newFinancialGoals: Number(target.value) })\n            }\n            readonly\n          />\n          <span class=\"validity\"></span>\n        </label>\n        <br></br>\n        <div className='row mt-3'>\n        <div className='col-sm'>\n        <button\n          className=\"budget-btn\"\n          onClick={() =>\n            canUpdate(newIncome, newNeeds, newWants, newFinancialGoals) ? (\n              onUpdate(state)\n            ) : (\n              <p>Invalid Inputs </p>\n            )\n          }\n        >\n          Update Chart\n        </button>\n        </div>\n        <div className='col-sm'>\n        {canUpdate(newIncome, newNeeds, newWants, newFinancialGoals) ? (\n          <p id=\"terms\">Valid Inputs</p>\n        ) : (\n          <p id=\"terms\">Invalid Inputs, please ensure the allocation adds up to 100% </p>\n        )}\n          </div>\n          </div>\n      </div>\n    </body>\n  );\n}\n\nfunction canUpdate(newIncome, newNeeds, newWants, newFinancialGoals) {\n  return (\n    newNeeds >= 0 &&\n    newNeeds <= 100 &&\n    newWants >= 0 &&\n    newWants <= 100 &&\n    newFinancialGoals >= 0 &&\n    newFinancialGoals <= 100 &&\n    newIncome >= 0 &&\n    newNeeds + newWants + newFinancialGoals === 100\n  );\n}\n\nexport default BudgetForm;\n","import React, { createContext, useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\n// 5. The reduceer - this is used to update the state, based on the action\nexport const AppReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'ADD_EXPENSE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\texpenses: [...state.expenses, action.payload],\n\t\t\t};\n\t\tcase 'DELETE_EXPENSE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\texpenses: state.expenses.filter(\n\t\t\t\t\t(expense) => expense.id !== action.payload\n\t\t\t\t),\n\t\t\t};\n\t\tcase 'SET_BUDGET':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tbudget: action.payload,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\n// 1. Sets the initial state when the app loads\nconst initialState = {\n\tbudget: 2000,\n\texpenses: [],\n};\n\n// 2. Creates the context this is the thing our components import and use to get the state\nexport const AppContext = createContext();\n\n// 3. Provider component - wraps the components we want to give access to the state\n// Accepts the children, which are the nested(wrapped) components\nexport const AppProvider = (props) => {\n\t// 4. Sets up the app state. takes a reducer, and an initial state\n\tconst [state, dispatch] = useReducer(AppReducer, initialState);\n\n\t// 5. Returns our context. Pass in the values we want to expose\n\treturn (\n\t\t<AppContext.Provider\n\t\t\tvalue={{\n\t\t\t\texpenses: state.expenses,\n\t\t\t\tbudget: state.budget,\n\t\t\t\tdispatch,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</AppContext.Provider>\n\t);\n};","import React from 'react';\n\nconst ViewBudget = (props) => {\n\treturn (\n\t\t<>\n\t\t\t<span>Budget: ${props.budget}</span>\n\t\t\t{/* <button type='button' class='btn btn-primary' onClick={props.handleEditClick}>\n\t\t\t\tEdit\n\t\t\t</button> */}\n\t\t</>\n\t);\n};\n\nexport default ViewBudget;","import React, { useState } from 'react';\n\nconst EditBudget = (props) => {\n\tconst [value, setValue] = useState(props.budget);\n\treturn (\n\t\t<>\n\t\t\t<input\n\t\t\t\trequired='required'\n\t\t\t\ttype='number'\n\t\t\t\tclass='form-control mr-3'\n\t\t\t\tid='name'\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={(event) => setValue(event.target.value)}\n\t\t\t/>\n\t\t \n\t\t</>\n\t);\n};\n\nexport default EditBudget;\n\n {/* <button\n\t\t\t\ttype='button'\n\t\t\t\tclass='btn btn-primary'\n\t\t\t\tonClick={() => props.handleSaveClick(value)}\n\t\t\t>\n\t\t\t\tSave\n\t\t\t</button>  */}","import React, { useState, useContext } from 'react';\nimport ViewBudget from './ViewBudget';\nimport EditBudget from './EditBudget';\nimport { AppContext } from './AppContext';\n\nconst Budgett = (props) => {\n\tconst { dispatch } = useContext(AppContext);\n\tconst {budget} = props;\n\tconst [isEditing, setIsEditing] = useState(false);\n\n\tconst handleEditClick = () => {\n\t\tsetIsEditing(true);\n\t};\n\n\tconst handleSaveClick = (value) => {\n\t\tdispatch({\n\t\t\ttype: 'SET_BUDGET',\n\t\t\tpayload: value,\n\t\t});\n\t\tsetIsEditing(false);\n\t};\n\n\treturn (\n\t\t<div class='alert alert-secondary p-3 d-flex align-items-center justify-content-between'>\n\t\t\t{isEditing ? (\n\t\t\t\t<EditBudget handleSaveClick={handleSaveClick} budget={budget} />\n\t\t\t) : (\n\t\t\t\t// For part 1 render component inline rather than create a seperate one\n\t\t\t\t<ViewBudget handleEditClick={handleEditClick} budget={budget} />\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Budgett;","import React, { useContext } from 'react';\nimport { AppContext } from './AppContext';\n\nconst ExpenseTotal = () => {\n\tconst { expenses } = useContext(AppContext);\n\n\tconst total = expenses.reduce((total, item) => {\n\t\treturn (total += item.cost);\n\t}, 0);\n\n\treturn (\n\t\t<div class='alert alert-primary p-4'>\n\t\t\t<span>Spent so far: ${total}</span>\n\t\t</div>\n\t);\n};\n\nexport default ExpenseTotal;","import React, { useContext } from 'react';\nimport { TiDelete } from 'react-icons/ti';\nimport { AppContext } from './AppContext';\n\nconst ExpenseItem = (props) => {\n\tconst { dispatch } = useContext(AppContext);\n\n\tconst handleDeleteExpense = () => {\n\t\tdispatch({\n\t\t\ttype: 'DELETE_EXPENSE',\n\t\t\tpayload: props.id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<li class='list-group-item d-flex justify-content-between align-items-center'>\n\t\t\t{props.name}\n\t\t\t<div>\n\t\t\t\t<span class='badge badge-primary badge-pill mr-3'>${props.cost}</span>\n\t\t\t\t<TiDelete size='1.5em' onClick={handleDeleteExpense} />\n\t\t\t</div>\n\t\t</li>\n\t);\n};\n\nexport default ExpenseItem;","import React, { useContext, useState, useEffect } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport { AppContext } from './AppContext';\n\nconst ExpenseList = () => {\n\tconst { expenses } = useContext(AppContext);\n\n\tconst [filteredExpenses, setfilteredExpenses] = useState(expenses || []);\n\n\tuseEffect(() => {\n\t\tsetfilteredExpenses(expenses);\n\t}, [expenses]);\n\n\tconst handleChange = (event) => {\n\t\tconst searchResults = expenses.filter((filteredExpense) =>\n\t\t\tfilteredExpense.name.toLowerCase().includes(event.target.value)\n\t\t);\n\t\tsetfilteredExpenses(searchResults);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tclass='form-control mb-2 mr-sm-2'\n\t\t\t\tplaceholder='Type to search...'\n\t\t\t\tonChange={handleChange}\n\t\t\t/>\n\t\t\t<ul class='list-group mt-3 mb-3'>\n\t\t\t\t{filteredExpenses.map((expense) => (\n\t\t\t\t\t<ExpenseItem\n\t\t\t\t\t\tid={expense.id}\n\t\t\t\t\t\tname={expense.name}\n\t\t\t\t\t\tcost={expense.cost}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n\nexport default ExpenseList;","import React, { useContext, useState } from 'react';\nimport { AppContext } from './AppContext';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst AddExpenseForm = (props) => {\n\tconst { dispatch } = useContext(AppContext);\n\n\tconst [name, setName] = useState('');\n\tconst [cost, setCost] = useState('');\n\n\tconst onSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tconst expense = {\n\t\t\tid: uuidv4(),\n\t\t\tname,\n\t\t\tcost: parseInt(cost),\n\t\t};\n\n\t\tdispatch({\n\t\t\ttype: 'ADD_EXPENSE',\n\t\t\tpayload: expense,\n\t\t});\n\n\t\tsetName('');\n\t\tsetCost('');\n\t};\n\n\treturn (\n\t\t<form onSubmit={onSubmit} autoComplete=\"off\">\n\t\t\t<div class='row'>\n\t\t\t\t<div class='col-sm col-lg-4'>\n\t\t\t\t\t<label for='name'>Item</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\trequired='required'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tclass='form-control'\n\t\t\t\t\t\tid='name'\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={(event) => setName(event.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class='col-sm col-lg-4'>\n\t\t\t\t\t<label for='cost'>Cost</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\trequired='required'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tclass='form-control'\n\t\t\t\t\t\tid='cost'\n\t\t\t\t\t\tvalue={cost}\n\t\t\t\t\t\tonChange={(event) => setCost(event.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class='row mt-3'>\n\t\t\t\t<div class='col-sm'>\n\t\t\t\t\t<button type='submit' class='btn btn-primary'>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default AddExpenseForm;","\nimport React, { useContext } from 'react';\nimport { AppContext } from './AppContext';\n\nconst RemainingBudget = (props) => {\n\tconst { expenses } = useContext(AppContext);\n\tconst {budget} = props;\n\n\tconst totalExpenses = expenses.reduce((total, item) => {\n\t\treturn (total += item.cost);\n\t}, 0);\n\n\tconst alertType = totalExpenses > budget ? 'alert-danger' : 'alert-success';\n\n\treturn (\n\t\t<div class={`alert p-4 ${alertType}`}>\n\t\t\t<span>Remaining: ${budget - totalExpenses}</span>\n\t\t</div>\n\t);\n};\n\nexport default RemainingBudget;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { AppProvider } from './AppContext';\nimport Budget from './Budgett';\nimport ExpenseTotal from './ExpenseTotal';\nimport ExpenseList from './ExpenseList';\nimport AddExpenseForm from './AddExpenseForm';\nimport RemainingBudget from './Remaining';\n\nconst BudgetSummary = (props) => {\n\tconst {budget}= props;\n\treturn (\n\t\t<AppProvider>\n\t\t\t<div className='container'>\n\t\t\t\t<div className='row mt-3'>\n\t\t\t\t\t<div className='col-sm'>\n\t\t\t\t\t\t<Budget budget={budget}  />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col-sm'>\n\t\t\t\t\t\t<RemainingBudget budget={budget} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col-sm'>\n\t\t\t\t\t\t<ExpenseTotal budget={budget} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<h3 className='mt-3'>Expenses</h3>\n\t\t\t\t<div className='row '>\n\t\t\t\t\t<div className='col-sm'>\n\t\t\t\t\t\t<ExpenseList />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<h3 className='mt-3'>Add Expense</h3>\n\t\t\t\t<div className='row mt-3'>\n\t\t\t\t\t<div className='col-sm'>\n\t\t\t\t\t\t<AddExpenseForm />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</AppProvider>\n\t);\n};\n\nexport default BudgetSummary;","import { useState } from \"react\";\nimport BudgetChart from \"./BudgetChart\";\nimport NavBar from \"./Navbar\";\nimport \"../styles/Budget.css\";\nimport BudgetForm from \"./BudgetForm\";\nimport * as React from \"react\";\nimport defaultState from \"./defaultStateBudget\";\nimport BudgetSummary from \"../budgetTracker/BudgetSummary\";\nfunction Budget() {\n\n  const [state, setState] = React.useState(defaultState);\n  \n\n  return (\n    <>\n      <section className=\"header\">\n      <NavBar/>\n      </section>\n      <div className =\"title\">Budget Planner</div>\n      <table className = \"budget-table\">\n        <thead>\n          <tr>\n            <th>Inputs</th>\n            <th>Pie Chart</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td><BudgetForm onUpdate={variables => setState(variables)}/>\n            <br></br>\n            <div id=\"note\">*Note: Ensure that the percetages of allocations adds up to 100%.*\n            <br></br>Hover on the Pie Chart to view the breakdown.\n            </div>\n            </td>\n            <td><BudgetChart style = {{height: \"1000px\" , width: \"1000px\"}}{...state}/></td>\n          </tr>\n        </tbody>\n      </table>    \n\n      <BudgetSummary budget={state.newIncome} />\n\n      {/* <section className=\"description\">\n        <h2> Guide and Relative information </h2>\n        <p>\n          Start by indicating your disposable income and the following inputs: needs, wants and financial goals, according to your own preference.\n          From this allocation, you should know roughly how much you are able to contribute to your investments. Head over to our compound growth calculator\n          to see how much you can grow you money!\n          <br></br>{\" \"}\n        </p>\n        <h3> Needs </h3>\n        <u1>\n          <li>Rent</li>\n          <li>Groceries</li>\n        </u1>\n        <h3> Wants </h3>\n        <u1>\n          <li>Entertainment Services </li>\n          <li>Hobbies </li>\n        </u1>\n        <h3> Financial Goals </h3>\n        <u1>\n          <li>Savings </li>\n          <li>Investment </li>\n        </u1>\n        <p>\n          {\" \"}\n          As with all budgetting rules out there, this is only a rough guide and\n          you can make your own adjustments to better suit your needs!{\" \"}\n        </p>\n      </section> */}\n    </>\n  );\n}\n\nexport default Budget;\n","const defaultState = {\n    initialAmount: 4000,\n    period: 10,\n    growthRate: 5,\n    yearlyContribution: 1000\n  };\n  \n  export default defaultState;","import * as React from \"react\";\nimport defaultState from \"./defaultState\";\n\nfunction VariablesForm({ onUpdate }) {\n  const [state, setState] = React.useState(defaultState);\n\n  const { initialAmount, period, growthRate, yearlyContribution } = state;\n\n  return (\n    <section>\n      <div className=\"flex\">\n        <label htmlFor=\"initialAmount\">\n          <div id=\"text\">Initial Amount ($)</div>\n          <input\n          className = \"variables\"\n            type=\"number\"\n            id=\"initialAmount\"\n            min = \"0\"\n            name=\"initialAmount\"\n            value={initialAmount}\n            onChange={({ target }) => setState({ ...state, initialAmount: Number(target.value) })}\n          />\n          <span class=\"validity\"></span>\n        </label>\n        <label htmlFor=\"period\">\n        <div id=\"text\">Investment Period (Years)</div>\n          <input\n          className = \"variables\"\n            type=\"number\"\n            id=\"period\"\n            min = \"0\"\n            name=\"period\"\n            value={period}\n            onChange={({ target }) => setState({ ...state, period: Number(target.value) })}\n          />\n          <span class=\"validity\"></span>\n        </label>\n        <label htmlFor=\"growthRate\">\n        <div id=\"text\">Annual Growth Rate (%)</div>\n          <input\n          className = \"variables\"\n            type=\"number\"\n            id=\"growthRate\"\n            min = \"0\"\n            name=\"growthRate\"\n            value={growthRate}\n            onChange={({ target }) => setState({ ...state, growthRate: Number(target.value) })}\n          />\n          <span class=\"validity\"></span>\n        </label>\n        <label htmlFor=\"yearlyContribution\">\n        <div id=\"text\">Yearly Contribution ($)</div>\n          <input\n          className = \"variables\"\n            type=\"number\"\n            id=\"yearlyContribution\"\n            min = \"0\"\n            name=\"yearlyContribution\"\n            value={yearlyContribution}\n            onChange={({ target }) =>\n              setState({ ...state, yearlyContribution: Number(target.value) })\n            }\n          />\n          <span class=\"validity\"></span>\n        </label>\n      </div>\n      <button type=\"button\" onClick={() => onUpdate(state)}>\n        Update Chart\n      </button>\n    </section>\n  );\n}\n\nexport default VariablesForm;","import * as React from \"react\";\nimport \"../styles/CompoundInterest.css\";\n\nfunction toNumber(value) {\n  return value.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nfunction Summary({ period, data }) {\n  return (\n    <>\n      <h2 id=\"subheader\">Summary</h2>\n      \n        <div id=\"summary\">In {period} years, you will have ${toNumber(data[data.length - 1].value)}</div> \n      \n      <br></br><h3>Breakdown</h3>\n      <table className = \"summary-table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">End of Year</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map(({ label, value }) => (\n            <tr key={label}>\n              <td>{label}</td>\n              <td>${value.toFixed(2)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nexport default Summary;","import * as React from \"react\";\nimport {\n  Label,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer\n} from \"recharts\";\n\nimport Summary from \"./Summary\";\n\nfunction renderTooltip({ payload }) {\n  if (!payload[0]) {\n    return;\n  }\n\n  return <span>{`£${payload[0].value.toFixed(2)}`}</span>;\n}\n\nfunction CompoundInterestChart({ initialAmount, period, growthRate, yearlyContribution }) {\n  const data = React.useMemo(\n    () => {\n      const result = [];\n      result.push({\n        label: `0`,\n        value: initialAmount\n      })\n\n      for (let i = 1; i <= period; i++) {\n        let lastFutureValue = initialAmount + yearlyContribution;\n        if (result.length > 0) {\n          lastFutureValue = result[result.length - 1].value + yearlyContribution;\n        }\n        result.push({\n          label: `${i}`,\n          value: lastFutureValue * Math.pow(1 + growthRate / 100, 1)\n        });\n      }\n\n      return result;\n    },\n    [initialAmount, period, growthRate, yearlyContribution]\n  );\n\n  return (\n    <>\n      <h2>Projected Growth</h2>\n      <div style={{ width: \"100%\", height: 300 }}>\n        <ResponsiveContainer>\n          <LineChart\n            width={500}\n            height={300}\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 0,\n              bottom: 5\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"label\">\n              <Label value=\"Years\" offset={-3} position=\"insideBottom\" />\n            </XAxis>\n            <YAxis />\n            {/* <Tooltip content={renderTooltip} /> */}\n            <Line type=\"monotone\" dataKey=\"value\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n      <hr />\n      <Summary period={period} data={data} />\n    </>\n  );\n}\n\nexport default CompoundInterestChart;","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport VariablesForm from \"./VariablesForm\";\nimport CompoundInterestChart from \"./CompoundInterestChart\";\n\nimport defaultState from \"./defaultState\";\nimport NavBar from \"./Navbar\";\nimport \"../styles/CompoundInterest.css\";\n\nfunction CompoundInterest() {\n  const [state, setState] = React.useState(defaultState);\n\n  return (\n    <div>\n      <section className=\"header\">\n        <NavBar />\n      </section>\n      <div className =\"title\">Compound Growth Calculator</div>\n      <VariablesForm onUpdate={(variables) => setState(variables)} />\n      <hr />\n      <CompoundInterestChart {...state} />\n    </div>\n  );\n}\n\nexport default CompoundInterest;\n","import { useState } from \"react\";\nimport \"../styles/Intrinsic.css\";\nimport NavBar from \"./Navbar\";\nimport { Tooltip, Icon, makeStyles, Paper } from \"@material-ui/core\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    margin: theme.spacing(1),\n  },\n\n  customWidth: {\n    width: 1200,\n    height: 250,\n    fontSize: 15,\n  },\n}));\n\nfunction IntrinsicValue(props) {\n  const [netProfit, newNetProfit] = useState(\"33000\");\n  const [depAndAmort, newDepAndAmort] = useState(\"6000\");\n  const [increaseInWC, newIncreaseINWC] = useState(\"6000\");\n  const [capitalExpenditure, newCapitalExpenditure] = useState(\"15000\");\n  const [debtRepayment, newDebtRepayment] = useState(\"600\");\n  const [debtRaised, newDebtRaised] = useState(\"200\");\n  const [numOfShares, newNumOfShares] = useState(\"2000\");\n  const [rateOfReturn, newRateOfReturn] = useState(\"5\");\n  const [fcfeGrowth, newFcfeGrowth] = useState(\"15\");\n  const [intrinsicValue, newIntrinsicValue] = useState(\"0\");\n  const { array } = props;\n  var fcfeY1 =\n    parseFloat(netProfit) +\n    parseFloat(depAndAmort) -\n    parseFloat(increaseInWC) -\n    parseFloat(capitalExpenditure) -\n    parseFloat(debtRepayment) +\n    parseFloat(debtRaised);\n\n  const projectedFCFE = [];\n\n  const calculateIntrinsicValue = () => {\n    let iv = 0;\n    for (let index = 1; index <= 5; index++) {\n      iv +=\n        projectedFCFE[index - 1].value /\n        Math.pow(1 + rateOfReturn / 100, index);\n    }\n    iv +=\n      (projectedFCFE[4].value.toFixed(2) * (1 / (rateOfReturn / 100))) /\n      Math.pow(1 + rateOfReturn / 100, 5);\n    newIntrinsicValue(iv);\n  };\n\n  for (let index = 1; index <= 5; index++) {\n    projectedFCFE.push({\n      label: `${index}`,\n      value: fcfeY1 * Math.pow(1 + fcfeGrowth / 100, index - 1),\n    });\n  }\n\n  const profit =\n    \"Net profit after taxes is a financial term used to describe a company's profit after all taxes have been paid. This financial data can be found in income statement.\";\n  const depre =\n    \"Amortisation is the practice of spreading an intangible asset's over that asset's useful life. E.g. patents and trademarks. Depreciation is the allocation of cost of a fixed asset over its useful life. These financial data can be found in the income statement.\";\n  const working =\n    \"Working capital represents the difference between a firm's current assets and current liabilities and also the amount of money company has to pay off its short-term expenses. These financial data can be found in the cash flow statement.\";\n  const capex =\n    \"Capital Expenditure (CapEx) are funds used by a company to acquire, upgrade and maintain its physical assets like buildings. CapEx is essential for investment for growth. This financial data can be found in the cash flow statement.\";\n  const debt =\n    \"Debt repayment is the act of paying money back on a company's existing debt that includes the principal sum and interest. This involves cash outflow of the company. This financial data can be found in the cash flow statement.\";\n  const fresh =\n    \"Debt raised is a financing transaction involving cash inflow to the company for its operations. This financial data can be foundin the cash flow statement.\";\n  const shares =\n    \"Number of outstanding shares is simply the total number of shares issued and held by stockholders - both external and coportate investors. This can be found in the balance sheet.\";\n  const ror =\n    \"Required rate of return is the minimum amount of return an investor will seek for assuming the risk of investment. There is no right number and it depends on each individual. You would need to consider factors like the return of market as a whole and also rate if you took no risk. You could use long-term government bonds rate or the 10-year treasury yield as the risk free rate.\";\n  const growth =\n    \"This growth rate is dependent on each individual own analysis on the company as they estimate the rate of growth of the company free cash flow. A more aggressive investment on a growing company would have a larger growth rate while a more conservative investment would have a smaller growth rate.\";\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <section className=\"header\">\n        <NavBar />\n      </section>\n      <div className=\"title\">Valuation Model</div>\n      <Paper className=\"box\" elevation={3}>\n        <div className=\"intrinsic-guide\">\n          In this valuation model, we are following a discounted cash flow model\n          used to estimate the instrinsic value of an investment based on its\n          expected future cash flow. This analysis figures out the value of an\n          investment based on projections of how much cash a company will\n          generate in future. We will be using free cash flow to equity as a\n          measure of how much cash is available to equity shareholder of a\n          company after all the cash inflows and outflows. There are many more\n          valuation models out there and this model is just a basic and simple\n          version to help new investors get a sensing of trying to value a\n          company. It is not guaranteed that this model would be accurate as\n          this is just a projection based on each individual analysis. To start,\n          hover your cursor over the ? icon at each financial term to understand\n          them and also figure out how to find these data on the company's\n          financial reports. After keying in all the data, the table will\n          display the cash flow projections for the next 5 years. The final\n          intrinsic value per share of a company can be found at the bottom\n          highlighted in red.\n        </div>\n      </Paper>\n      <br></br>\n      <table className=\"valuation-table\">\n        <tbody>\n          <tr>\n            <td>\n              <label className=\"labelBox\">\n                Net Profit after Tax ($) :{\" \"}\n                {\n                  <Tooltip\n                    title={profit}\n                    classes={{ tooltip: classes.customWidth }}\n                  >\n                    <Icon>\n                      <HelpOutlineIcon className={classes.icon} />\n                    </Icon>\n                  </Tooltip>\n                }\n                <input\n                  className=\"intrinsic\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  id=\"netProfit\"\n                  name=\"netProfit\"\n                  value={netProfit}\n                  onChange={(event) => newNetProfit(event.target.value)}\n                />\n                <span class=\"validity\"></span>\n              </label>\n            </td>\n            <br></br>\n            <td>\n              <label className=\"labelBox\">\n                Depreciation and Amortisation ($) :{\" \"}\n                {\n                  <Tooltip\n                    title={depre}\n                    classes={{ tooltip: classes.customWidth }}\n                  >\n                    <Icon>\n                      <HelpOutlineIcon className={classes.icon} />\n                    </Icon>\n                  </Tooltip>\n                }\n                <input\n                  className=\"intrinsic\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  id=\"depAndAmort\"\n                  name=\"depAndAmort\"\n                  value={depAndAmort}\n                  onChange={(event) => newDepAndAmort(event.target.value)}\n                />\n                <span class=\"validity\"></span>\n              </label>\n            </td>\n            <br></br>\n            <td>\n              <label className=\"labelBox\">\n                Increase in Working Capital ($) :{\" \"}\n                {\n                  <Tooltip\n                    title={working}\n                    classes={{ tooltip: classes.customWidth }}\n                  >\n                    <Icon>\n                      <HelpOutlineIcon className={classes.icon} />\n                    </Icon>\n                  </Tooltip>\n                }\n                <input\n                  className=\"intrinsic\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  id=\"increaseInWC\"\n                  name=\"increaseInWC\"\n                  value={increaseInWC}\n                  onChange={(event) => newIncreaseINWC(event.target.value)}\n                />\n                <span class=\"validity\"></span>\n              </label>\n            </td>\n          </tr>\n          <br></br>\n          <tr>\n            <td>\n              <label className=\"labelBox\">\n                Capital Expenditure ($) :{\" \"}\n                {\n                  <Tooltip\n                    title={capex}\n                    classes={{ tooltip: classes.customWidth }}\n                  >\n                    <Icon>\n                      <HelpOutlineIcon className={classes.icon} />\n                    </Icon>\n                  </Tooltip>\n                }\n                <input\n                  className=\"intrinsic\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  min=\"0\"\n                  id=\"capitalExpenditure\"\n                  name=\"capitalExpenditure\"\n                  value={capitalExpenditure}\n                  onChange={(event) =>\n                    newCapitalExpenditure(event.target.value)\n                  }\n                />\n                <span class=\"validity\"></span>\n              </label>\n            </td>\n            <br></br>\n            <td>\n              <label className=\"labelBox\">\n                Debt Repayment on existing debt ($) :\n                {\n                  <Tooltip\n                    title={debt}\n                    classes={{ tooltip: classes.customWidth }}\n                  >\n                    <Icon>\n                      <HelpOutlineIcon className={classes.icon} />\n                    </Icon>\n                  </Tooltip>\n                }\n                <input\n                  className=\"intrinsic\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  id=\"debtRepayment\"\n                  name=\"debtRepayment\"\n                  min=\"0\"\n                  value={debtRepayment}\n                  onChange={(event) => newDebtRepayment(event.target.value)}\n                />\n                <span class=\"validity\"></span>\n              </label>\n            </td>\n            <br></br>\n            <td>\n              <label className=\"labelBox\">\n                Fresh Debt Raised ($) :{\" \"}\n                {\n                  <Tooltip\n                    title={fresh}\n                    classes={{ tooltip: classes.customWidth }}\n                  >\n                    <Icon>\n                      <HelpOutlineIcon className={classes.icon} />\n                    </Icon>\n                  </Tooltip>\n                }\n                <input\n                  className=\"intrinsic\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  id=\"debtRaised\"\n                  min=\"0\"\n                  name=\"debtRaised\"\n                  value={debtRaised}\n                  onChange={(event) => newDebtRaised(event.target.value)}\n                />\n                <span class=\"validity\"></span>\n              </label>\n            </td>\n          </tr>\n          <br></br>\n          <tr>\n            <td>\n              <label className=\"labelBox\">\n                No. of Outstanding Shares :{\" \"}\n                {\n                  <Tooltip\n                    title={shares}\n                    classes={{ tooltip: classes.customWidth }}\n                  >\n                    <Icon>\n                      <HelpOutlineIcon className={classes.icon} />\n                    </Icon>\n                  </Tooltip>\n                }\n                <input\n                  className=\"intrinsic\"\n                  type=\"number\"\n                  id=\"numOfShares\"\n                  name=\"numOfShares\"\n                  min=\"1\"\n                  value={numOfShares}\n                  onChange={(event) => newNumOfShares(event.target.value)}\n                />\n                <span class=\"validity\"></span>\n              </label>\n            </td>\n            <br></br>\n            <td>\n              <label className=\"labelBox\">\n                Required rate of return (%) :{\" \"}\n                {\n                  <Tooltip\n                    title={ror}\n                    classes={{ tooltip: classes.customWidth }}\n                  >\n                    <Icon>\n                      <HelpOutlineIcon className={classes.icon} />\n                    </Icon>\n                  </Tooltip>\n                }\n                <input\n                  className=\"intrinsic\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  id=\"rateOfReturn\"\n                  name=\"rateOfReturn\"\n                  min=\"0\"\n                  value={rateOfReturn}\n                  onChange={(event) => newRateOfReturn(event.target.value)}\n                />\n                <span class=\"validity\"></span>\n              </label>\n            </td>\n            <br></br>\n            <td>\n              <label className=\"labelBox\">\n                FCFE Growth Rate (%) :{\" \"}\n                {\n                  <Tooltip\n                    title={growth}\n                    classes={{ tooltip: classes.customWidth }}\n                  >\n                    <Icon>\n                      <HelpOutlineIcon className={classes.icon} />\n                    </Icon>\n                  </Tooltip>\n                }\n                <input\n                  className=\"intrinsic\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  id=\"fcfeGrowth\"\n                  name=\"fcfeGrowth\"\n                  min=\"0\"\n                  value={fcfeGrowth}\n                  onChange={(event) => newFcfeGrowth(event.target.value)}\n                />\n                <span class=\"validity\"></span>\n              </label>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <button\n        className=\"intrinsic-btn\"\n        onClick={() => calculateIntrinsicValue()}\n      >\n        Calculate\n      </button>\n\n      <div>\n        <table className=\"value-table\">\n          <thead>\n            <tr>\n              <th>Year</th>\n              <th>Projected FCFE</th>\n            </tr>\n          </thead>\n          <tbody>\n            {projectedFCFE.map(({ label, value }) => (\n              <tr key={label}>\n                <td>{label}</td>\n                <td>${value.toFixed(2)} </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <br></br>\n        <label className=\"labelBox\">\n          Terminal Value =\n          <input\n            type=\"number\"\n            value={(\n              projectedFCFE[4].value *\n              (1 / (rateOfReturn / 100))\n            ).toFixed(2)}\n          />\n        </label>\n        <br></br>\n        <label className=\"labelBox\">\n          Intrinsic Value For Company =\n          <input type=\"number\" value={(intrinsicValue * 1).toFixed(2)} />\n        </label>\n        <br></br>\n        <label className=\"final-labelBox\">\n          Intrinsic Value per Share =\n          <input\n            type=\"number\"\n            value={(intrinsicValue / numOfShares).toFixed(2)}\n          />\n        </label>\n      </div>\n    </>\n  );\n}\n\nexport default IntrinsicValue;\n","import React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { useState } from \"react\";\nimport \"../styles/Portfolio.css\";\n\nfunction PortfolioChart(props) {\n  const { stocks} = props;\n  const stockNames = stocks.map((stock) => stock.symbol);\n  const stockValue = stocks.map((stock) => stock.amount);\n  const colors = stocks.map((stock)=> stock.color);\n  \n  const state = {\n    labels: stockNames,\n    datasets: [\n      {\n        label: \"# of votes\",\n        data: stockValue,\n        backgroundColor: colors,\n        borderWidth: 1,\n        cx: 400,\n        cy: 400\n        \n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\",\n      },\n      title: {\n        text: \"Portfolio\",\n        display: false,\n        fontSize: 100,\n      },\n    },\n  };\n\n  return (\n    <div className=\"pie\">\n      <Pie data={state} options={options} cx={400} cy={400} />\n    </div>\n  );\n}\n\nfunction getRandomColor() {\n    var letters = '0123456789ABCDEF'.split('');\n    var color = '#';\n    for (var i = 0; i < 6; i++ ) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  export default PortfolioChart;","import { useState } from \"react\";\nimport PortfolioChart from \"./PortfolioChart\";\nimport NavBar from \"./Navbar\";\nimport \"../styles/Portfolio.css\";\nimport { Tooltip, Icon,Paper, makeStyles } from \"@material-ui/core\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\n\nfunction Portfolio() {\n  const [stocks, setStocks] = useState([]);\n  const [newStockName, setNewStockName] = useState(\" \");\n  const [newStockValue, setNewStockValue] = useState(\" \");\n  const [investmentValue, setNewInvestmetValue] = useState(\" \");\n  const handleAddStock = (event) => {\n    event.preventDefault();\n    const newStockList = [\n      ...stocks,\n      {\n        symbol: newStockName,\n        amount: newStockValue,\n        color: getRandomColor(),\n      },\n    ];\n    setStocks(newStockList);\n  };\n\n  const handleReset = () => {\n    setStocks([]);\n  };\n\n  const getTotalValue = () => {\n    let total = 0;\n    for (let index = 0; index < stocks.length; index++) {\n      total += parseFloat(stocks[index].amount);\n    }\n    return total;\n  };\n\n  var cashHoldings = parseFloat(investmentValue) - getTotalValue();\n\n  \n  \n  const useStyles = makeStyles((theme) => ({\n    icon: {\n      margin: theme.spacing(1),\n    },\n  \n    customWidth: {\n      width: 1200,\n      height: 140,\n      fontSize: 15,\n    },\n  }));\n  const classes = useStyles();\n\n  const allWeather = \n <ul><li>30% total stock market</li><li>40% long-term bonds</li><li>15% intermediate bonds</li><li>7.5% commodities</li><li>7.5% gold</li></ul>;\n  const ivy =\n  <ul><li>20% US stocks</li><li>20% international stocks</li><li>20% bonds</li><li>20% commodities</li><li>20% REITs (Real Estate Investment Trust)</li></ul> \n \n return (\n    <>\n      <section className=\"header\">\n        <NavBar />\n      </section>\n      <div className=\"title\">Portfolio Allocator</div>\n      <Paper className=\"box\" elevation={3}>\n        <div className=\"portfolio-guide\">\n          A proper portfolio allocation is imperative for a solid invesment\n          foundation. There are many financial instruments to invest in or for\n          hedging and here are two recommended portfolio strategies for\n          beginners but do not that you do not have to follow strictly to the\n          allocation as this is just a rough guide. Financial instruments to\n          invest in are stocks, bonds, REITs, commodities, ETF, cryptocurrency\n          and more. Feel free to customise to your own preferences to achieve\n          your own ideal allocation.<br></br>\n          <br></br>\n          Hover over the ? icons to view the allocations.\n        </div>\n      </Paper>\n\n      <Paper className=\"box\" elevation={3}>\n            <h3>All-Weather Portfolio{\n                  <Tooltip\n                    title={allWeather}\n                    classes={{ tooltip: classes.customWidth }}\n                  >\n                    <Icon>\n                      <HelpOutlineIcon className={classes.icon} />\n                    </Icon>\n                  </Tooltip>\n                }</h3>\n            <h3>Ivy Portfolio{\n                  <Tooltip\n                    title={ivy}\n                    classes={{ tooltip: classes.customWidth }}\n                  >\n                    <Icon>\n                      <HelpOutlineIcon className={classes.icon} />\n                    </Icon>\n                  </Tooltip>\n                }</h3>\n        <br></br>\n      </Paper>\n      <table className=\"portfolio-table\">\n        <thead>\n          <tr>\n            <th>Inputs</th>\n            <th>Pie Chart</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <div>\n                <label>\n                  Input your Investment Value:\n                  <input\n                    className=\"portfolio\"\n                    type=\"number\"\n                    min=\"0\"\n                    placeholder=\"0\"\n                    value={investmentValue}\n                    onChange={(event) => {\n                      setNewInvestmetValue(event.target.value);\n                    }}\n                  />\n                  <span class=\"validity\"></span>\n                </label>\n\n                <div id=\"term\"> Add a Stock to your Portfolio!</div>\n                <form onSubmit={handleAddStock}>\n                  <label>\n                    Symbol:\n                    <input\n                      className=\"portfolio\"\n                      type=\"text\"\n                      required\n                      value={newStockName}\n                      onChange={(event) => {\n                        setNewStockName(event.target.value);\n                      }}\n                    />\n                  </label>\n                  <label>\n                    Amount invested:\n                    <input\n                      className=\"portfolio\"\n                      type=\"number\"\n                      min=\"0\"\n                      placeholder=\"0\"\n                      value={newStockValue}\n                      onChange={(event) => {\n                        setNewStockValue(event.target.value);\n                      }}\n                    />\n                    <span class=\"validity\"></span>\n                  </label>\n                  <input className=\"add-btn\" type=\"submit\" value=\"Add\" />\n                </form>\n              </div>\n            </td>\n            <td>\n              {stocks.length === 0 ? (\n                <p id=\"terms\">Portfolio is Empty!</p>\n              ) : (\n                <>\n                  <PortfolioChart stocks={stocks} />\n                  <button className=\"delete-btn\" onClick={() => handleReset()}>\n                    Reset\n                  </button>\n                </>\n              )}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div>\n        <div id=\"terms\">Portfolio</div>\n        {stocks.length > 0 ? (\n          <StockList stocks={stocks} setStocks={setStocks} />\n        ) : (\n          <p id=\"terms-1\"> No stocks added!</p>\n        )}\n      </div>\n\n      <div>\n        <div id=\"terms\">Cash Holdings:</div>\n        <p id=\"terms\">\n          {cashHoldings >= 0 ? cashHoldings : <p> More Cash Needed!</p>}\n        </p>\n      </div>\n    </>\n  );\n}\n\nfunction StockList(props) {\n  const { stocks, setStocks } = props;\n  const handleDeleteStock = (index) => {\n    const newStockList = stocks.filter(\n      (stock) => stocks.indexOf(stock) != index\n    );\n    setStocks(newStockList);\n  };\n\n  return (\n    <>\n      <table className=\"holdings-table\">\n        <thead>\n          <tr>\n            <th>No.</th>\n            <th>Holdings</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          {stocks.map((stock, index) => (\n            <tr key={index}>\n              <td>{index + 1}</td>\n              <td>{stock.symbol}</td>\n              <td> {stock.amount}</td>\n\n              <button\n                className=\"delete-btn\"\n                onClick={() => handleDeleteStock(index)}\n              >\n                Delete\n              </button>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n}\nfunction getRandomColor() {\n  var letters = \"0123456789ABCDEF\".split(\"\");\n  var color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nexport default Portfolio;\n","export default __webpack_public_path__ + \"static/media/sean.f5422f2b.jpg\";","export default __webpack_public_path__ + \"static/media/weehng.4fdc1f7e.jpg\";","import NavBar from \"../components/Navbar\";\nimport sean from \"../images/sean.jpg\";\nimport weehng from \"../images/weehng.jpg\";\nimport  \"../styles/AboutUs.css\";\n\nfunction AboutUs() {\n  return (\n    <>\n      \n        <section className=\"header\">\n          <NavBar />\n        </section>\n\n        <h1>ABOUT US</h1>\n        {/* <!-------about us----------> */}\n\n        <div className=\"container\">\n          <div className=\"title\">\n            <h1>Our Team</h1>\n            <div className =\"description\">\n              Team Invesfe came about when the two of us decided to take part in\n              Orbital, which is a NUS School of Computing’s 1st year summer\n              self-directed, independent work course.\n            </div>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          <div className=\"card\" id=\"one\">\n            <div className=\"img_box\">\n              <img src={weehng} alt=\"\" />\n            </div>\n            <h3>Chua Wee Hng</h3>\n            <h3>Co-Developer</h3>\n            <div className=\"description\">\n            <p>Year 1 NUS Business Analytics</p>\n            </div>\n          </div>\n\n          <div className=\"card\" id=\"two\">\n            <div className=\"img_box\">\n              <img src={sean} alt=\"\" />\n            </div>\n            <h3>Sean Ang</h3>\n            <h3>Co-Developer</h3>\n            <div className=\"description\">\n            <p>Year 1 NUS Information System </p>\n            </div>\n          </div>\n        </div>\n      \n    </>\n  );\n}\n\nexport default AboutUs;\n","import { useState, useEffect } from \"react\";\nimport fire from \"../config/Firebase\";\nimport \"../styles/Login.css\";\nimport NavBar from \"./Navbar\";\nfunction Login(props) {\n  const {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleLogIn,\n    handleSignUp,\n    hasAccount,\n    setHasAccount,\n    emailError,\n    passwordError,\n  } = props;\n  \n  return (\n    <>\n    <section className=\"header\">\n        <NavBar />\n      </section>\n    <section className=\"login\">\n      <div className=\"login-container\">\n        <label>Email</label>\n        <input\n          type=\"text\"\n          autoFocus\n          required\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <p className=\"errorMsg\">{emailError}</p>\n        <label>Password</label>\n        <input\n          type=\"password\"\n          required\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <p className=\"errorMsg\">{passwordError}</p>\n        <div className=\"btn-container\">\n          {hasAccount ? (\n            <>\n              <button className=\"login-btn\" onClick={handleLogIn}>\n                Sign in\n              </button>\n              <p>\n                Don't have an account ?{\" \"}\n                <span onClick={() => setHasAccount(!hasAccount)}>Sign up</span>\n              </p>\n            </>\n          ) : (\n            <>\n              <button className=\"login-btn\" onClick={handleSignUp}>\n                Sign up\n              </button>\n              <p>\n                Have an account ?{\" \"}\n                <span onClick={() => setHasAccount(!hasAccount)}>Sign in</span>\n              </p>\n            </>\n          )}\n        </div>\n      </div>\n    </section>\n    </>\n  );\n}\n\nexport default Login;\n","import Home from \"./Home\";\nimport {\n  FirebaseAuthConsumer,\n  IfFirebaseAuthed,\n  IfFirebaseUnAuthed,\n} from \"@react-firebase/auth\";\nimport Budget from \"./components/Budget\";\nimport CompoundInterest from \"./components/CompoundInterest\";\nimport IntrinsicValue from \"./components/IntrinsicValue\";\nimport Portfolio from \"./components/Portfolio\";\nimport AboutUs from \"./webpages/AboutUs\";\nimport Login from \"./components/Login\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport NavBar from \"./components/Navbar\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <div>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/budget\" component={Budget} />\n          <Route exact path=\"/compoundinterest\" component={CompoundInterest} />\n          <Route exact path=\"/intrinsicvalue\" component={IntrinsicValue} />\n          <Route exact path=\"/portfolio\" component={Portfolio} />\n          <Route exact path=\"/aboutus\" component={AboutUs} />\n          <Route exact path=\"/login\" component={Login} />\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n\n// const [user, setUser] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [emailError, setEmailError] = useState(\"\");\n//   const [passwordError, setPasswordError] = useState(\"\");\n//   const [hasAccount, setHasAccount] = useState(false);\n\n//   const clearInputs = () => {\n//     setEmail(\"\");\n//     setPassword(\"\");\n//   };\n\n//   const clearErrors = () => {\n//     setEmailError(\"\");\n//     setPasswordError(\"\");\n//   };\n\n//   const handleLogIn = () => {\n//     clearErrors();\n//     fire\n//       .auth()\n//       .signInWithEmailAndPassword(email, password)\n//       .catch((err) => {\n//         switch (err.code) {\n//           case \"auth/invalid-email\":\n//           case \"auth/user-disabled\":\n//           case \"auth/user-not-found\":\n//             setEmailError(err.message);\n//             break;\n//           case \"auth/wrong-password\":\n//             setPasswordError(err.message);\n//             break;\n//         }\n//       });\n//   };\n\n//   const handleSignUp = () => {\n//     clearErrors();\n//     fire\n//       .auth()\n//       .createUserWithEmailAndPassword(email, password)\n//       .catch((err) => {\n//         switch (err.code) {\n//           case \"auth/email-already-in-use\":\n//           case \"auth/invalid-email\":\n//             setEmailError(err.message);\n//             break;\n//           case \"auth/wrong-password\":\n//             setPasswordError(err.message);\n//             break;\n//         }\n//       });\n//   };\n\n//   const handleLogOut = () => {\n//     fire.auth().signOut();\n//   };\n\n//   const authListener = () => {\n//     fire.auth().onAuthStateChanged((user) => {\n//       if (user) {\n//         clearInputs();\n//         setUser(user);\n//       } else {\n//         setUser(\"\");\n//       }\n//     });\n//   };\n\n//   useEffect(() => {\n//     authListener();\n//   }, []);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\nimport { FirebaseAuthProvider } from \"@react-firebase/auth\";\nimport { firebase } from \"@firebase/app\";\nimport \"@firebase/auth\";\nimport { config } from \"./config/Firebase\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <FirebaseAuthProvider {...config} firebase={firebase}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n    </FirebaseAuthProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n","import { FirebaseAuthConsumer } from \"@react-firebase/auth\";\nimport firebase from \"firebase\";\n\nexport const config = {\n    apiKey: \"AIzaSyCKzB9eIkZBXDLAtNKokpM9Wnp8AW0R43M\",\n    authDomain: \"invesfe.firebaseapp.com\",\n    projectId: \"invesfe\",\n    storageBucket: \"invesfe.appspot.com\",\n    messagingSenderId: \"220435463781\",\n    appId: \"1:220435463781:web:6aacbc1d3402cb0d87d08c\",\n    measurementId: \"G-YYLT3P05MV\"\n};\n"],"sourceRoot":""}